com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status[] values()
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status valueOf(java.lang.String)
com.phonegap.CompassListener
com.phonegap.CompassListener: int STOPPED
com.phonegap.CompassListener: int STARTING
com.phonegap.CompassListener: int RUNNING
com.phonegap.CompassListener: int ERROR_FAILED_TO_START
com.phonegap.CompassListener: long TIMEOUT
com.phonegap.CompassListener: int status
com.phonegap.CompassListener: float heading
com.phonegap.CompassListener: long timeStamp
com.phonegap.CompassListener: long lastAccessTime
com.phonegap.CompassListener: int accuracy
com.phonegap.CompassListener: android.hardware.SensorManager sensorManager
com.phonegap.CompassListener: android.hardware.Sensor mSensor
com.phonegap.CompassListener: CompassListener()
com.phonegap.CompassListener: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.CompassListener: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.CompassListener: boolean isSynch(java.lang.String)
com.phonegap.CompassListener: void onDestroy()
com.phonegap.CompassListener: int start()
com.phonegap.CompassListener: void stop()
com.phonegap.CompassListener: void onAccuracyChanged(android.hardware.Sensor,int)
com.phonegap.CompassListener: void onSensorChanged(android.hardware.SensorEvent)
com.phonegap.CompassListener: int getStatus()
com.phonegap.CompassListener: float getHeading()
com.phonegap.CompassListener: void setTimeout(long)
com.phonegap.CompassListener: long getTimeout()
com.phonegap.CompassListener: void setStatus(int)
com.phonegap.CompassListener: org.json.JSONObject getCompassHeading()
com.phonegap.CompassListener: void <clinit>()
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.GpsListener
com.phonegap.GpsListener: com.phonegap.api.PhonegapActivity mCtx
com.phonegap.GpsListener: android.location.LocationManager mLocMan
com.phonegap.GpsListener: com.phonegap.GeoListener owner
com.phonegap.GpsListener: boolean hasData
com.phonegap.GpsListener: android.location.Location cLoc
com.phonegap.GpsListener: boolean running
com.phonegap.GpsListener: GpsListener(com.phonegap.api.PhonegapActivity,int,com.phonegap.GeoListener)
com.phonegap.GpsListener: android.location.Location getLocation()
com.phonegap.GpsListener: void onProviderDisabled(java.lang.String)
com.phonegap.GpsListener: void onProviderEnabled(java.lang.String)
com.phonegap.GpsListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)
com.phonegap.GpsListener: void onLocationChanged(android.location.Location)
com.phonegap.GpsListener: boolean hasLocation()
com.phonegap.GpsListener: void start(int)
com.phonegap.GpsListener: void stop()
com.phonegap.WebViewReflect
com.phonegap.WebViewReflect: java.lang.reflect.Method mWebSettings_setDatabaseEnabled
com.phonegap.WebViewReflect: java.lang.reflect.Method mWebSettings_setDatabasePath
com.phonegap.WebViewReflect: java.lang.reflect.Method mWebSettings_setDomStorageEnabled
com.phonegap.WebViewReflect: java.lang.reflect.Method mWebSettings_setGeolocationEnabled
com.phonegap.WebViewReflect: WebViewReflect()
com.phonegap.WebViewReflect: void setDatabaseEnabled(boolean)
com.phonegap.WebViewReflect: void checkCompatibility()
com.phonegap.WebViewReflect: void setStorage(android.webkit.WebSettings,boolean,java.lang.String)
com.phonegap.WebViewReflect: void setGeolocationEnabled(android.webkit.WebSettings,boolean)
com.phonegap.WebViewReflect: void setDomStorage(android.webkit.WebSettings)
com.phonegap.WebViewReflect: void <clinit>()
com.phonegap.AudioPlayer
com.phonegap.AudioPlayer: java.lang.String LOG_TAG
com.phonegap.AudioPlayer: int MEDIA_NONE
com.phonegap.AudioPlayer: int MEDIA_STARTING
com.phonegap.AudioPlayer: int MEDIA_RUNNING
com.phonegap.AudioPlayer: int MEDIA_PAUSED
com.phonegap.AudioPlayer: int MEDIA_STOPPED
com.phonegap.AudioPlayer: int MEDIA_STATE
com.phonegap.AudioPlayer: int MEDIA_DURATION
com.phonegap.AudioPlayer: int MEDIA_POSITION
com.phonegap.AudioPlayer: int MEDIA_ERROR
com.phonegap.AudioPlayer: int MEDIA_ERR_NONE_ACTIVE
com.phonegap.AudioPlayer: int MEDIA_ERR_ABORTED
com.phonegap.AudioPlayer: int MEDIA_ERR_NETWORK
com.phonegap.AudioPlayer: int MEDIA_ERR_DECODE
com.phonegap.AudioPlayer: int MEDIA_ERR_NONE_SUPPORTED
com.phonegap.AudioPlayer: com.phonegap.AudioHandler handler
com.phonegap.AudioPlayer: java.lang.String id
com.phonegap.AudioPlayer: int state
com.phonegap.AudioPlayer: java.lang.String audioFile
com.phonegap.AudioPlayer: float duration
com.phonegap.AudioPlayer: android.media.MediaRecorder recorder
com.phonegap.AudioPlayer: java.lang.String tempFile
com.phonegap.AudioPlayer: android.media.MediaPlayer mPlayer
com.phonegap.AudioPlayer: boolean prepareOnly
com.phonegap.AudioPlayer: AudioPlayer(com.phonegap.AudioHandler,java.lang.String)
com.phonegap.AudioPlayer: void destroy()
com.phonegap.AudioPlayer: void startRecording(java.lang.String)
com.phonegap.AudioPlayer: void moveFile(java.lang.String)
com.phonegap.AudioPlayer: void stopRecording()
com.phonegap.AudioPlayer: void startPlaying(java.lang.String)
com.phonegap.AudioPlayer: void seekToPlaying(int)
com.phonegap.AudioPlayer: void pausePlaying()
com.phonegap.AudioPlayer: void stopPlaying()
com.phonegap.AudioPlayer: void onCompletion(android.media.MediaPlayer)
com.phonegap.AudioPlayer: long getCurrentPosition()
com.phonegap.AudioPlayer: boolean isStreaming(java.lang.String)
com.phonegap.AudioPlayer: float getDuration(java.lang.String)
com.phonegap.AudioPlayer: void onPrepared(android.media.MediaPlayer)
com.phonegap.AudioPlayer: float getDurationInSeconds()
com.phonegap.AudioPlayer: boolean onError(android.media.MediaPlayer,int,int)
com.phonegap.AudioPlayer: void setState(int)
com.phonegap.AudioPlayer: int getState()
com.phonegap.AudioPlayer: void setVolume(float)
com.phonegap.AudioPlayer: void <clinit>()
com.phonegap.StandAlone
com.phonegap.StandAlone: StandAlone()
com.phonegap.StandAlone: void onCreate(android.os.Bundle)
com.phonegap.DroidGap: java.lang.String TAG
com.phonegap.DroidGap: android.webkit.WebView appView
com.phonegap.DroidGap: android.webkit.WebViewClient webViewClient
com.phonegap.DroidGap: java.util.ArrayList whiteList
com.phonegap.DroidGap: java.util.HashMap whiteListCache
com.phonegap.DroidGap: android.widget.LinearLayout root
com.phonegap.DroidGap: boolean bound
com.phonegap.DroidGap: com.phonegap.CallbackServer callbackServer
com.phonegap.DroidGap: com.phonegap.api.PluginManager pluginManager
com.phonegap.DroidGap: boolean cancelLoadUrl
com.phonegap.DroidGap: android.app.ProgressDialog spinnerDialog
com.phonegap.DroidGap: java.lang.String url
com.phonegap.DroidGap: java.util.Stack urls
com.phonegap.DroidGap: java.lang.String initUrl
com.phonegap.DroidGap: int ACTIVITY_STARTING
com.phonegap.DroidGap: int ACTIVITY_RUNNING
com.phonegap.DroidGap: int ACTIVITY_EXITING
com.phonegap.DroidGap: int activityState
com.phonegap.DroidGap: java.lang.String baseUrl
com.phonegap.DroidGap: com.phonegap.api.IPlugin activityResultCallback
com.phonegap.DroidGap: boolean activityResultKeepRunning
com.phonegap.DroidGap: int loadUrlTimeout
com.phonegap.DroidGap: int backgroundColor
com.phonegap.DroidGap: int splashscreen
com.phonegap.DroidGap: int loadUrlTimeoutValue
com.phonegap.DroidGap: boolean keepRunning
com.phonegap.DroidGap: DroidGap()
com.phonegap.DroidGap: void onCreate(android.os.Bundle)
com.phonegap.DroidGap: void init()
com.phonegap.DroidGap: void setWebViewClient(android.webkit.WebView,android.webkit.WebViewClient)
com.phonegap.DroidGap: void handleActivityParameters()
com.phonegap.DroidGap: void loadUrl(java.lang.String)
com.phonegap.DroidGap: void loadUrlIntoView(java.lang.String)
com.phonegap.DroidGap: void loadUrl(java.lang.String,int)
com.phonegap.DroidGap: void loadUrlIntoView(java.lang.String,int)
com.phonegap.DroidGap: void cancelLoadUrl()
com.phonegap.DroidGap: void clearCache()
com.phonegap.DroidGap: void clearHistory()
com.phonegap.DroidGap: boolean backHistory()
com.phonegap.DroidGap: void onConfigurationChanged(android.content.res.Configuration)
com.phonegap.DroidGap: boolean getBooleanProperty(java.lang.String,boolean)
com.phonegap.DroidGap: int getIntegerProperty(java.lang.String,int)
com.phonegap.DroidGap: java.lang.String getStringProperty(java.lang.String,java.lang.String)
com.phonegap.DroidGap: double getDoubleProperty(java.lang.String,double)
com.phonegap.DroidGap: void setBooleanProperty(java.lang.String,boolean)
com.phonegap.DroidGap: void setIntegerProperty(java.lang.String,int)
com.phonegap.DroidGap: void setStringProperty(java.lang.String,java.lang.String)
com.phonegap.DroidGap: void setDoubleProperty(java.lang.String,double)
com.phonegap.DroidGap: void onPause()
com.phonegap.DroidGap: void onNewIntent(android.content.Intent)
com.phonegap.DroidGap: void onResume()
com.phonegap.DroidGap: void onDestroy()
com.phonegap.DroidGap: void postMessage(java.lang.String,java.lang.Object)
com.phonegap.DroidGap: void addService(java.lang.String,java.lang.String)
com.phonegap.DroidGap: void sendJavascript(java.lang.String)
com.phonegap.DroidGap: void showWebPage(java.lang.String,boolean,boolean,java.util.HashMap)
com.phonegap.DroidGap: void spinnerStart(java.lang.String,java.lang.String)
com.phonegap.DroidGap: void spinnerStop()
com.phonegap.DroidGap: void endActivity()
com.phonegap.DroidGap: boolean onKeyDown(int,android.view.KeyEvent)
com.phonegap.DroidGap: void startActivityForResult(android.content.Intent,int)
com.phonegap.DroidGap: void startActivityForResult(com.phonegap.api.IPlugin,android.content.Intent,int)
com.phonegap.DroidGap: void onActivityResult(int,int,android.content.Intent)
com.phonegap.DroidGap: void setActivityResultCallback(com.phonegap.api.IPlugin)
com.phonegap.DroidGap: void onReceivedError(int,java.lang.String,java.lang.String)
com.phonegap.DroidGap: void displayError(java.lang.String,java.lang.String,java.lang.String,boolean)
com.phonegap.DroidGap: void loadConfiguration()
com.phonegap.DroidGap: void addWhiteListEntry(java.lang.String,boolean)
com.phonegap.DroidGap: boolean isUrlWhiteListed(java.lang.String)
com.phonegap.DroidGap: boolean onCreateOptionsMenu(android.view.Menu)
com.phonegap.DroidGap: boolean onPrepareOptionsMenu(android.view.Menu)
com.phonegap.DroidGap: boolean onOptionsItemSelected(android.view.MenuItem)
com.phonegap.DroidGap: void access$000(com.phonegap.DroidGap)
com.phonegap.DroidGap: java.util.Stack access$100(com.phonegap.DroidGap)
com.phonegap.DroidGap: int access$200(com.phonegap.DroidGap)
com.phonegap.DroidGap: void access$300(com.phonegap.DroidGap,java.lang.String)
com.phonegap.DroidGap: java.lang.String access$400(com.phonegap.DroidGap)
com.phonegap.DroidGap: boolean access$500(com.phonegap.DroidGap,java.lang.String)
com.phonegap.DroidGap: int access$208(com.phonegap.DroidGap)
com.phonegap.DroidGap: void <clinit>()
com.phonegap.api.PhonegapActivity: PhonegapActivity()
com.phonegap.api.PhonegapActivity: void addService(java.lang.String,java.lang.String)
com.phonegap.api.PhonegapActivity: void sendJavascript(java.lang.String)
com.phonegap.api.PhonegapActivity: void startActivityForResult(com.phonegap.api.IPlugin,android.content.Intent,int)
com.phonegap.api.PhonegapActivity: void setActivityResultCallback(com.phonegap.api.IPlugin)
com.phonegap.api.PhonegapActivity: void loadUrl(java.lang.String)
com.phonegap.api.PhonegapActivity: void postMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.api.PluginResult$Status
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status NO_RESULT
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status OK
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status CLASS_NOT_FOUND_EXCEPTION
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status ILLEGAL_ACCESS_EXCEPTION
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status INSTANTIATION_EXCEPTION
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status MALFORMED_URL_EXCEPTION
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status IO_EXCEPTION
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status INVALID_ACTION
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status JSON_EXCEPTION
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status ERROR
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status[] $VALUES
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status[] values()
com.phonegap.api.PluginResult$Status: com.phonegap.api.PluginResult$Status valueOf(java.lang.String)
com.phonegap.api.PluginResult$Status: PluginResult$Status(java.lang.String,int)
com.phonegap.api.PluginResult$Status: void <clinit>()
com.phonegap.HttpHandler
com.phonegap.HttpHandler: HttpHandler()
com.phonegap.HttpHandler: java.lang.Boolean get(java.lang.String,java.lang.String)
com.phonegap.HttpHandler: org.apache.http.HttpEntity getHttpEntity(java.lang.String)
com.phonegap.HttpHandler: void writeToDisk(org.apache.http.HttpEntity,java.lang.String)
com.phonegap.api.PhonegapActivity
com.phonegap.api.PhonegapActivity: PhonegapActivity()
com.phonegap.api.PhonegapActivity: void addService(java.lang.String,java.lang.String)
com.phonegap.api.PhonegapActivity: void sendJavascript(java.lang.String)
com.phonegap.api.PhonegapActivity: void startActivityForResult(com.phonegap.api.IPlugin,android.content.Intent,int)
com.phonegap.api.PhonegapActivity: void setActivityResultCallback(com.phonegap.api.IPlugin)
com.phonegap.api.PhonegapActivity: void loadUrl(java.lang.String)
com.phonegap.api.PhonegapActivity: void postMessage(java.lang.String,java.lang.Object)
com.phonegap.Device
com.phonegap.Device: java.lang.String TAG
com.phonegap.Device: java.lang.String phonegapVersion
com.phonegap.Device: java.lang.String platform
com.phonegap.Device: java.lang.String uuid
com.phonegap.Device: android.content.BroadcastReceiver telephonyReceiver
com.phonegap.Device: Device()
com.phonegap.Device: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.Device: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.Device: boolean isSynch(java.lang.String)
com.phonegap.Device: void onDestroy()
com.phonegap.Device: void initTelephonyReceiver()
com.phonegap.Device: java.lang.String getPlatform()
com.phonegap.Device: java.lang.String getUuid()
com.phonegap.Device: java.lang.String getPhonegapVersion()
com.phonegap.Device: java.lang.String getModel()
com.phonegap.Device: java.lang.String getProductName()
com.phonegap.Device: java.lang.String getOSVersion()
com.phonegap.Device: java.lang.String getSDKVersion()
com.phonegap.Device: java.lang.String getTimeZoneID()
com.phonegap.Device: void <clinit>()
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.SimpleCrypto
com.phonegap.SimpleCrypto: java.lang.String HEX
com.phonegap.SimpleCrypto: SimpleCrypto()
com.phonegap.SimpleCrypto: java.lang.String encrypt(java.lang.String,java.lang.String)
com.phonegap.SimpleCrypto: java.lang.String decrypt(java.lang.String,java.lang.String)
com.phonegap.SimpleCrypto: byte[] getRawKey(byte[])
com.phonegap.SimpleCrypto: byte[] encrypt(byte[],byte[])
com.phonegap.SimpleCrypto: byte[] decrypt(byte[],byte[])
com.phonegap.SimpleCrypto: java.lang.String toHex(java.lang.String)
com.phonegap.SimpleCrypto: java.lang.String fromHex(java.lang.String)
com.phonegap.SimpleCrypto: byte[] toByte(java.lang.String)
com.phonegap.SimpleCrypto: java.lang.String toHex(byte[])
com.phonegap.SimpleCrypto: void appendHex(java.lang.StringBuffer,byte)
com.phonegap.Capture
com.phonegap.Capture: java.lang.String VIDEO_3GPP
com.phonegap.Capture: java.lang.String AUDIO_3GPP
com.phonegap.Capture: java.lang.String IMAGE_JPEG
com.phonegap.Capture: int CAPTURE_AUDIO
com.phonegap.Capture: int CAPTURE_IMAGE
com.phonegap.Capture: int CAPTURE_VIDEO
com.phonegap.Capture: java.lang.String LOG_TAG
com.phonegap.Capture: int CAPTURE_INTERNAL_ERR
com.phonegap.Capture: int CAPTURE_APPLICATION_BUSY
com.phonegap.Capture: int CAPTURE_INVALID_ARGUMENT
com.phonegap.Capture: int CAPTURE_NO_MEDIA_FILES
com.phonegap.Capture: int CAPTURE_NOT_SUPPORTED
com.phonegap.Capture: java.lang.String callbackId
com.phonegap.Capture: long limit
com.phonegap.Capture: double duration
com.phonegap.Capture: org.json.JSONArray results
com.phonegap.Capture: android.net.Uri imageUri
com.phonegap.Capture: Capture()
com.phonegap.Capture: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.Capture: org.json.JSONObject getFormatData(java.lang.String,java.lang.String)
com.phonegap.Capture: org.json.JSONObject getImageData(java.lang.String,org.json.JSONObject)
com.phonegap.Capture: org.json.JSONObject getAudioVideoData(java.lang.String,org.json.JSONObject,boolean)
com.phonegap.Capture: void captureAudio()
com.phonegap.Capture: void captureImage()
com.phonegap.Capture: void captureVideo(double)
com.phonegap.Capture: void onActivityResult(int,int,android.content.Intent)
com.phonegap.Capture: org.json.JSONObject createMediaFile(android.net.Uri)
com.phonegap.Capture: org.json.JSONObject createErrorObject(int,java.lang.String)
com.phonegap.Capture: void fail(org.json.JSONObject)
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.file.InvalidModificationException
com.phonegap.file.InvalidModificationException: InvalidModificationException(java.lang.String)
com.phonegap.Notification
com.phonegap.Notification: int confirmResult
com.phonegap.Notification: android.app.ProgressDialog spinnerDialog
com.phonegap.Notification: android.app.ProgressDialog progressDialog
com.phonegap.Notification: Notification()
com.phonegap.Notification: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.Notification: boolean isSynch(java.lang.String)
com.phonegap.Notification: void beep(long)
com.phonegap.Notification: void vibrate(long)
com.phonegap.Notification: void alert(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.phonegap.Notification: void confirm(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.phonegap.Notification: void activityStart(java.lang.String,java.lang.String)
com.phonegap.Notification: void activityStop()
com.phonegap.Notification: void progressStart(java.lang.String,java.lang.String)
com.phonegap.Notification: void progressValue(int)
com.phonegap.Notification: void progressStop()
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.App
com.phonegap.App: App()
com.phonegap.App: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.App: void clearCache()
com.phonegap.App: void loadUrl(java.lang.String,org.json.JSONObject)
com.phonegap.App: void cancelLoadUrl()
com.phonegap.App: void clearHistory()
com.phonegap.App: void backHistory()
com.phonegap.App: void overrideBackbutton(boolean)
com.phonegap.App: boolean isBackbuttonOverridden()
com.phonegap.App: void exitApp()
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.ExifHelper
com.phonegap.ExifHelper: java.lang.String aperature
com.phonegap.ExifHelper: java.lang.String datetime
com.phonegap.ExifHelper: java.lang.String exposureTime
com.phonegap.ExifHelper: java.lang.String flash
com.phonegap.ExifHelper: java.lang.String focalLength
com.phonegap.ExifHelper: java.lang.String gpsAltitude
com.phonegap.ExifHelper: java.lang.String gpsAltitudeRef
com.phonegap.ExifHelper: java.lang.String gpsDateStamp
com.phonegap.ExifHelper: java.lang.String gpsLatitude
com.phonegap.ExifHelper: java.lang.String gpsLatitudeRef
com.phonegap.ExifHelper: java.lang.String gpsLongitude
com.phonegap.ExifHelper: java.lang.String gpsLongitudeRef
com.phonegap.ExifHelper: java.lang.String gpsProcessingMethod
com.phonegap.ExifHelper: java.lang.String gpsTimestamp
com.phonegap.ExifHelper: java.lang.String iso
com.phonegap.ExifHelper: java.lang.String make
com.phonegap.ExifHelper: java.lang.String model
com.phonegap.ExifHelper: java.lang.String orientation
com.phonegap.ExifHelper: java.lang.String whiteBalance
com.phonegap.ExifHelper: android.media.ExifInterface inFile
com.phonegap.ExifHelper: android.media.ExifInterface outFile
com.phonegap.ExifHelper: ExifHelper()
com.phonegap.ExifHelper: void createInFile(java.lang.String)
com.phonegap.ExifHelper: void createOutFile(java.lang.String)
com.phonegap.ExifHelper: void readExifData()
com.phonegap.ExifHelper: void writeExifData()
com.phonegap.DroidGap
com.phonegap.DroidGap: java.lang.String TAG
com.phonegap.DroidGap: android.webkit.WebView appView
com.phonegap.DroidGap: android.webkit.WebViewClient webViewClient
com.phonegap.DroidGap: java.util.ArrayList whiteList
com.phonegap.DroidGap: java.util.HashMap whiteListCache
com.phonegap.DroidGap: android.widget.LinearLayout root
com.phonegap.DroidGap: boolean bound
com.phonegap.DroidGap: com.phonegap.CallbackServer callbackServer
com.phonegap.DroidGap: com.phonegap.api.PluginManager pluginManager
com.phonegap.DroidGap: boolean cancelLoadUrl
com.phonegap.DroidGap: android.app.ProgressDialog spinnerDialog
com.phonegap.DroidGap: java.lang.String url
com.phonegap.DroidGap: java.util.Stack urls
com.phonegap.DroidGap: java.lang.String initUrl
com.phonegap.DroidGap: int ACTIVITY_STARTING
com.phonegap.DroidGap: int ACTIVITY_RUNNING
com.phonegap.DroidGap: int ACTIVITY_EXITING
com.phonegap.DroidGap: int activityState
com.phonegap.DroidGap: java.lang.String baseUrl
com.phonegap.DroidGap: com.phonegap.api.IPlugin activityResultCallback
com.phonegap.DroidGap: boolean activityResultKeepRunning
com.phonegap.DroidGap: int loadUrlTimeout
com.phonegap.DroidGap: int backgroundColor
com.phonegap.DroidGap: int splashscreen
com.phonegap.DroidGap: int loadUrlTimeoutValue
com.phonegap.DroidGap: boolean keepRunning
com.phonegap.DroidGap: DroidGap()
com.phonegap.DroidGap: void onCreate(android.os.Bundle)
com.phonegap.DroidGap: void init()
com.phonegap.DroidGap: void setWebViewClient(android.webkit.WebView,android.webkit.WebViewClient)
com.phonegap.DroidGap: void handleActivityParameters()
com.phonegap.DroidGap: void loadUrl(java.lang.String)
com.phonegap.DroidGap: void loadUrlIntoView(java.lang.String)
com.phonegap.DroidGap: void loadUrl(java.lang.String,int)
com.phonegap.DroidGap: void loadUrlIntoView(java.lang.String,int)
com.phonegap.DroidGap: void cancelLoadUrl()
com.phonegap.DroidGap: void clearCache()
com.phonegap.DroidGap: void clearHistory()
com.phonegap.DroidGap: boolean backHistory()
com.phonegap.DroidGap: void onConfigurationChanged(android.content.res.Configuration)
com.phonegap.DroidGap: boolean getBooleanProperty(java.lang.String,boolean)
com.phonegap.DroidGap: int getIntegerProperty(java.lang.String,int)
com.phonegap.DroidGap: java.lang.String getStringProperty(java.lang.String,java.lang.String)
com.phonegap.DroidGap: double getDoubleProperty(java.lang.String,double)
com.phonegap.DroidGap: void setBooleanProperty(java.lang.String,boolean)
com.phonegap.DroidGap: void setIntegerProperty(java.lang.String,int)
com.phonegap.DroidGap: void setStringProperty(java.lang.String,java.lang.String)
com.phonegap.DroidGap: void setDoubleProperty(java.lang.String,double)
com.phonegap.DroidGap: void onPause()
com.phonegap.DroidGap: void onNewIntent(android.content.Intent)
com.phonegap.DroidGap: void onResume()
com.phonegap.DroidGap: void onDestroy()
com.phonegap.DroidGap: void postMessage(java.lang.String,java.lang.Object)
com.phonegap.DroidGap: void addService(java.lang.String,java.lang.String)
com.phonegap.DroidGap: void sendJavascript(java.lang.String)
com.phonegap.DroidGap: void showWebPage(java.lang.String,boolean,boolean,java.util.HashMap)
com.phonegap.DroidGap: void spinnerStart(java.lang.String,java.lang.String)
com.phonegap.DroidGap: void spinnerStop()
com.phonegap.DroidGap: void endActivity()
com.phonegap.DroidGap: boolean onKeyDown(int,android.view.KeyEvent)
com.phonegap.DroidGap: void startActivityForResult(android.content.Intent,int)
com.phonegap.DroidGap: void startActivityForResult(com.phonegap.api.IPlugin,android.content.Intent,int)
com.phonegap.DroidGap: void onActivityResult(int,int,android.content.Intent)
com.phonegap.DroidGap: void setActivityResultCallback(com.phonegap.api.IPlugin)
com.phonegap.DroidGap: void onReceivedError(int,java.lang.String,java.lang.String)
com.phonegap.DroidGap: void displayError(java.lang.String,java.lang.String,java.lang.String,boolean)
com.phonegap.DroidGap: void loadConfiguration()
com.phonegap.DroidGap: void addWhiteListEntry(java.lang.String,boolean)
com.phonegap.DroidGap: boolean isUrlWhiteListed(java.lang.String)
com.phonegap.DroidGap: boolean onCreateOptionsMenu(android.view.Menu)
com.phonegap.DroidGap: boolean onPrepareOptionsMenu(android.view.Menu)
com.phonegap.DroidGap: boolean onOptionsItemSelected(android.view.MenuItem)
com.phonegap.DroidGap: void access$000(com.phonegap.DroidGap)
com.phonegap.DroidGap: java.util.Stack access$100(com.phonegap.DroidGap)
com.phonegap.DroidGap: int access$200(com.phonegap.DroidGap)
com.phonegap.DroidGap: void access$300(com.phonegap.DroidGap,java.lang.String)
com.phonegap.DroidGap: java.lang.String access$400(com.phonegap.DroidGap)
com.phonegap.DroidGap: boolean access$500(com.phonegap.DroidGap,java.lang.String)
com.phonegap.DroidGap: int access$208(com.phonegap.DroidGap)
com.phonegap.DroidGap: void <clinit>()
com.phonegap.api.PhonegapActivity: PhonegapActivity()
com.phonegap.api.PhonegapActivity: void addService(java.lang.String,java.lang.String)
com.phonegap.api.PhonegapActivity: void sendJavascript(java.lang.String)
com.phonegap.api.PhonegapActivity: void startActivityForResult(com.phonegap.api.IPlugin,android.content.Intent,int)
com.phonegap.api.PhonegapActivity: void setActivityResultCallback(com.phonegap.api.IPlugin)
com.phonegap.api.PhonegapActivity: void loadUrl(java.lang.String)
com.phonegap.api.PhonegapActivity: void postMessage(java.lang.String,java.lang.Object)
com.phonegap.DirectoryManager
com.phonegap.DirectoryManager: java.lang.String LOG_TAG
com.phonegap.DirectoryManager: DirectoryManager()
com.phonegap.DirectoryManager: boolean testFileExists(java.lang.String)
com.phonegap.DirectoryManager: long getFreeDiskSpace()
com.phonegap.DirectoryManager: boolean testSaveLocationExists()
com.phonegap.DirectoryManager: java.io.File constructFilePaths(java.lang.String,java.lang.String)
com.phonegap.DirectoryManager: java.lang.String getTempDirectoryPath(android.content.Context)
com.phonegap.FileTransfer
com.phonegap.FileTransfer: java.lang.String LOG_TAG
com.phonegap.FileTransfer: java.lang.String LINE_START
com.phonegap.FileTransfer: java.lang.String LINE_END
com.phonegap.FileTransfer: java.lang.String BOUNDRY
com.phonegap.FileTransfer: int FILE_NOT_FOUND_ERR
com.phonegap.FileTransfer: int INVALID_URL_ERR
com.phonegap.FileTransfer: int CONNECTION_ERR
com.phonegap.FileTransfer: javax.net.ssl.SSLSocketFactory defaultSSLSocketFactory
com.phonegap.FileTransfer: javax.net.ssl.HostnameVerifier defaultHostnameVerifier
com.phonegap.FileTransfer: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY
com.phonegap.FileTransfer: FileTransfer()
com.phonegap.FileTransfer: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.FileTransfer: void trustAllHosts()
com.phonegap.FileTransfer: org.json.JSONObject createFileTransferError(int,java.lang.String,java.lang.String)
com.phonegap.FileTransfer: java.lang.String getArgument(org.json.JSONArray,int,java.lang.String)
com.phonegap.FileTransfer: com.phonegap.FileUploadResult upload(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.json.JSONObject,boolean,boolean)
com.phonegap.FileTransfer: org.json.JSONObject download(java.lang.String,java.lang.String)
com.phonegap.FileTransfer: java.io.InputStream getPathFromUri(java.lang.String)
com.phonegap.FileTransfer: void <clinit>()
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.GapView
com.phonegap.GapView: GapView(android.content.Context)
com.phonegap.GapView: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.phonegap.GapView: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.phonegap.GapView: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)
com.phonegap.ContactAccessor
com.phonegap.ContactAccessor: java.lang.String LOG_TAG
com.phonegap.ContactAccessor: android.app.Activity mApp
com.phonegap.ContactAccessor: android.webkit.WebView mView
com.phonegap.ContactAccessor: ContactAccessor()
com.phonegap.ContactAccessor: boolean isRequired(java.lang.String,java.util.HashMap)
com.phonegap.ContactAccessor: java.util.HashMap buildPopulationSet(org.json.JSONArray)
com.phonegap.ContactAccessor: java.lang.String getJsonString(org.json.JSONObject,java.lang.String)
com.phonegap.ContactAccessor: java.lang.String save(org.json.JSONObject)
com.phonegap.ContactAccessor: org.json.JSONArray search(org.json.JSONArray,org.json.JSONObject)
com.phonegap.ContactAccessor: org.json.JSONObject getContactById(java.lang.String)
com.phonegap.ContactAccessor: boolean remove(java.lang.String)
com.phonegap.CryptoHandler
com.phonegap.CryptoHandler: CryptoHandler()
com.phonegap.CryptoHandler: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.CryptoHandler: void encrypt(java.lang.String,java.lang.String)
com.phonegap.CryptoHandler: void decrypt(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.file.FileExistsException
com.phonegap.file.FileExistsException: FileExistsException(java.lang.String)
com.phonegap.DroidGap$GapClient
com.phonegap.DroidGap$GapClient: java.lang.String TAG
com.phonegap.DroidGap$GapClient: long MAX_QUOTA
com.phonegap.DroidGap$GapClient: com.phonegap.DroidGap ctx
com.phonegap.DroidGap$GapClient: com.phonegap.DroidGap this$0
com.phonegap.DroidGap$GapClient: DroidGap$GapClient(com.phonegap.DroidGap,android.content.Context)
com.phonegap.DroidGap$GapClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
com.phonegap.DroidGap$GapClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
com.phonegap.DroidGap$GapClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)
com.phonegap.DroidGap$GapClient: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)
com.phonegap.DroidGap$GapClient: void onConsoleMessage(java.lang.String,int,java.lang.String)
com.phonegap.DroidGap$GapClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)
com.phonegap.DroidGap$GapClient: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback)
com.phonegap.NetworkManager
com.phonegap.NetworkManager: int NOT_REACHABLE
com.phonegap.NetworkManager: int REACHABLE_VIA_CARRIER_DATA_NETWORK
com.phonegap.NetworkManager: int REACHABLE_VIA_WIFI_NETWORK
com.phonegap.NetworkManager: java.lang.String WIFI
com.phonegap.NetworkManager: java.lang.String WIMAX
com.phonegap.NetworkManager: java.lang.String MOBILE
com.phonegap.NetworkManager: java.lang.String GSM
com.phonegap.NetworkManager: java.lang.String GPRS
com.phonegap.NetworkManager: java.lang.String EDGE
com.phonegap.NetworkManager: java.lang.String CDMA
com.phonegap.NetworkManager: java.lang.String UMTS
com.phonegap.NetworkManager: java.lang.String HSPA
com.phonegap.NetworkManager: java.lang.String HSUPA
com.phonegap.NetworkManager: java.lang.String HSDPA
com.phonegap.NetworkManager: java.lang.String ONEXRTT
com.phonegap.NetworkManager: java.lang.String EHRPD
com.phonegap.NetworkManager: java.lang.String LTE
com.phonegap.NetworkManager: java.lang.String UMB
com.phonegap.NetworkManager: java.lang.String HSPA_PLUS
com.phonegap.NetworkManager: java.lang.String TYPE_UNKNOWN
com.phonegap.NetworkManager: java.lang.String TYPE_ETHERNET
com.phonegap.NetworkManager: java.lang.String TYPE_WIFI
com.phonegap.NetworkManager: java.lang.String TYPE_2G
com.phonegap.NetworkManager: java.lang.String TYPE_3G
com.phonegap.NetworkManager: java.lang.String TYPE_4G
com.phonegap.NetworkManager: java.lang.String TYPE_NONE
com.phonegap.NetworkManager: java.lang.String LOG_TAG
com.phonegap.NetworkManager: java.lang.String connectionCallbackId
com.phonegap.NetworkManager: android.net.ConnectivityManager sockMan
com.phonegap.NetworkManager: android.content.BroadcastReceiver receiver
com.phonegap.NetworkManager: NetworkManager()
com.phonegap.NetworkManager: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.NetworkManager: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.NetworkManager: boolean isSynch(java.lang.String)
com.phonegap.NetworkManager: void onDestroy()
com.phonegap.NetworkManager: void updateConnectionInfo(android.net.NetworkInfo)
com.phonegap.NetworkManager: java.lang.String getConnectionInfo(android.net.NetworkInfo)
com.phonegap.NetworkManager: void sendUpdate(java.lang.String)
com.phonegap.NetworkManager: java.lang.String getType(android.net.NetworkInfo)
com.phonegap.NetworkManager: void access$000(com.phonegap.NetworkManager,android.net.NetworkInfo)
com.phonegap.NetworkManager: void <clinit>()
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.FileUtils
com.phonegap.FileUtils: java.lang.String LOG_TAG
com.phonegap.FileUtils: java.lang.String _DATA
com.phonegap.FileUtils: int NOT_FOUND_ERR
com.phonegap.FileUtils: int SECURITY_ERR
com.phonegap.FileUtils: int ABORT_ERR
com.phonegap.FileUtils: int NOT_READABLE_ERR
com.phonegap.FileUtils: int ENCODING_ERR
com.phonegap.FileUtils: int NO_MODIFICATION_ALLOWED_ERR
com.phonegap.FileUtils: int INVALID_STATE_ERR
com.phonegap.FileUtils: int SYNTAX_ERR
com.phonegap.FileUtils: int INVALID_MODIFICATION_ERR
com.phonegap.FileUtils: int QUOTA_EXCEEDED_ERR
com.phonegap.FileUtils: int TYPE_MISMATCH_ERR
com.phonegap.FileUtils: int PATH_EXISTS_ERR
com.phonegap.FileUtils: int TEMPORARY
com.phonegap.FileUtils: int PERSISTENT
com.phonegap.FileUtils: int RESOURCE
com.phonegap.FileUtils: int APPLICATION
com.phonegap.FileUtils: java.io.FileReader f_in
com.phonegap.FileUtils: java.io.FileWriter f_out
com.phonegap.FileUtils: FileUtils()
com.phonegap.FileUtils: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.FileUtils: void notifyDelete(java.lang.String)
com.phonegap.FileUtils: org.json.JSONObject resolveLocalFileSystemURI(java.lang.String)
com.phonegap.FileUtils: org.json.JSONArray readEntries(java.lang.String)
com.phonegap.FileUtils: org.json.JSONObject transferTo(java.lang.String,org.json.JSONObject,java.lang.String,boolean)
com.phonegap.FileUtils: java.io.File createDestination(java.lang.String,java.io.File,java.io.File)
com.phonegap.FileUtils: org.json.JSONObject copyFile(java.io.File,java.io.File)
com.phonegap.FileUtils: org.json.JSONObject copyDirectory(java.io.File,java.io.File)
com.phonegap.FileUtils: boolean isCopyOnItself(java.lang.String,java.lang.String)
com.phonegap.FileUtils: org.json.JSONObject moveFile(java.io.File,java.io.File)
com.phonegap.FileUtils: org.json.JSONObject moveDirectory(java.io.File,java.io.File)
com.phonegap.FileUtils: boolean removeRecursively(java.lang.String)
com.phonegap.FileUtils: boolean removeDirRecursively(java.io.File)
com.phonegap.FileUtils: boolean remove(java.lang.String)
com.phonegap.FileUtils: org.json.JSONObject getFile(java.lang.String,java.lang.String,org.json.JSONObject,boolean)
com.phonegap.FileUtils: java.io.File createFileObject(java.lang.String,java.lang.String)
com.phonegap.FileUtils: org.json.JSONObject getParent(java.lang.String)
com.phonegap.FileUtils: boolean atRootDirectory(java.lang.String)
com.phonegap.FileUtils: org.json.JSONObject getMetadata(java.lang.String)
com.phonegap.FileUtils: org.json.JSONObject getFileMetadata(java.lang.String)
com.phonegap.FileUtils: org.json.JSONObject requestFileSystem(int)
com.phonegap.FileUtils: org.json.JSONObject getEntry(java.io.File)
com.phonegap.FileUtils: org.json.JSONObject getEntry(java.lang.String)
com.phonegap.FileUtils: boolean isSynch(java.lang.String)
com.phonegap.FileUtils: java.lang.String readAsText(java.lang.String,java.lang.String)
com.phonegap.FileUtils: java.lang.String readAsDataURL(java.lang.String)
com.phonegap.FileUtils: java.lang.String getMimeType(java.lang.String)
com.phonegap.FileUtils: long write(java.lang.String,java.lang.String,int)
com.phonegap.FileUtils: long truncateFile(java.lang.String,long)
com.phonegap.FileUtils: java.io.InputStream getPathFromUri(java.lang.String)
com.phonegap.FileUtils: java.lang.String getRealPathFromURI(android.net.Uri,com.phonegap.api.PhonegapActivity)
com.phonegap.FileUtils: void <clinit>()
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.NetworkListener
com.phonegap.NetworkListener: com.phonegap.api.PhonegapActivity mCtx
com.phonegap.NetworkListener: android.location.LocationManager mLocMan
com.phonegap.NetworkListener: com.phonegap.GeoListener owner
com.phonegap.NetworkListener: boolean hasData
com.phonegap.NetworkListener: android.location.Location cLoc
com.phonegap.NetworkListener: boolean running
com.phonegap.NetworkListener: NetworkListener(com.phonegap.api.PhonegapActivity,int,com.phonegap.GeoListener)
com.phonegap.NetworkListener: android.location.Location getLocation()
com.phonegap.NetworkListener: void onProviderDisabled(java.lang.String)
com.phonegap.NetworkListener: void onProviderEnabled(java.lang.String)
com.phonegap.NetworkListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)
com.phonegap.NetworkListener: void onLocationChanged(android.location.Location)
com.phonegap.NetworkListener: void start(int)
com.phonegap.NetworkListener: void stop()
com.phonegap.BatteryListener
com.phonegap.BatteryListener: java.lang.String LOG_TAG
com.phonegap.BatteryListener: android.content.BroadcastReceiver receiver
com.phonegap.BatteryListener: java.lang.String batteryCallbackId
com.phonegap.BatteryListener: BatteryListener()
com.phonegap.BatteryListener: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.BatteryListener: void onDestroy()
com.phonegap.BatteryListener: void removeBatteryListener()
com.phonegap.BatteryListener: org.json.JSONObject getBatteryInfo(android.content.Intent)
com.phonegap.BatteryListener: void updateBatteryInfo(android.content.Intent)
com.phonegap.BatteryListener: void sendUpdate(org.json.JSONObject,boolean)
com.phonegap.BatteryListener: void access$000(com.phonegap.BatteryListener,android.content.Intent)
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.file.TypeMismatchException
com.phonegap.file.TypeMismatchException: TypeMismatchException(java.lang.String)
com.phonegap.CameraLauncher
com.phonegap.CameraLauncher: int DATA_URL
com.phonegap.CameraLauncher: int FILE_URI
com.phonegap.CameraLauncher: int PHOTOLIBRARY
com.phonegap.CameraLauncher: int CAMERA
com.phonegap.CameraLauncher: int SAVEDPHOTOALBUM
com.phonegap.CameraLauncher: int PICTURE
com.phonegap.CameraLauncher: int VIDEO
com.phonegap.CameraLauncher: int ALLMEDIA
com.phonegap.CameraLauncher: int JPEG
com.phonegap.CameraLauncher: int PNG
com.phonegap.CameraLauncher: java.lang.String GET_PICTURE
com.phonegap.CameraLauncher: java.lang.String GET_VIDEO
com.phonegap.CameraLauncher: java.lang.String GET_All
com.phonegap.CameraLauncher: java.lang.String LOG_TAG
com.phonegap.CameraLauncher: int mQuality
com.phonegap.CameraLauncher: int targetWidth
com.phonegap.CameraLauncher: int targetHeight
com.phonegap.CameraLauncher: android.net.Uri imageUri
com.phonegap.CameraLauncher: int encodingType
com.phonegap.CameraLauncher: int mediaType
com.phonegap.CameraLauncher: java.lang.String callbackId
com.phonegap.CameraLauncher: int numPics
com.phonegap.CameraLauncher: CameraLauncher()
com.phonegap.CameraLauncher: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.CameraLauncher: void takePicture(int,int)
com.phonegap.CameraLauncher: java.io.File createCaptureFile(int)
com.phonegap.CameraLauncher: void getImage(int,int)
com.phonegap.CameraLauncher: android.graphics.Bitmap scaleBitmap(android.graphics.Bitmap)
com.phonegap.CameraLauncher: void onActivityResult(int,int,android.content.Intent)
com.phonegap.CameraLauncher: android.database.Cursor queryImgDB()
com.phonegap.CameraLauncher: void checkForDuplicateImage(int)
com.phonegap.CameraLauncher: void processPicture(android.graphics.Bitmap)
com.phonegap.CameraLauncher: void failPicture(java.lang.String)
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.file.NoModificationAllowedException
com.phonegap.file.NoModificationAllowedException: NoModificationAllowedException(java.lang.String)
com.phonegap.AudioHandler
com.phonegap.AudioHandler: java.lang.String TAG
com.phonegap.AudioHandler: java.util.HashMap players
com.phonegap.AudioHandler: java.util.ArrayList pausedForPhone
com.phonegap.AudioHandler: AudioHandler()
com.phonegap.AudioHandler: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.AudioHandler: boolean isSynch(java.lang.String)
com.phonegap.AudioHandler: void onDestroy()
com.phonegap.AudioHandler: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.AudioHandler: boolean release(java.lang.String)
com.phonegap.AudioHandler: void startRecordingAudio(java.lang.String,java.lang.String)
com.phonegap.AudioHandler: void stopRecordingAudio(java.lang.String)
com.phonegap.AudioHandler: void startPlayingAudio(java.lang.String,java.lang.String)
com.phonegap.AudioHandler: void seekToAudio(java.lang.String,int)
com.phonegap.AudioHandler: void pausePlayingAudio(java.lang.String)
com.phonegap.AudioHandler: void stopPlayingAudio(java.lang.String)
com.phonegap.AudioHandler: float getCurrentPositionAudio(java.lang.String)
com.phonegap.AudioHandler: float getDurationAudio(java.lang.String,java.lang.String)
com.phonegap.AudioHandler: void setAudioOutputDevice(int)
com.phonegap.AudioHandler: int getAudioOutputDevice()
com.phonegap.AudioHandler: void setVolume(java.lang.String,float)
com.phonegap.AudioHandler: void <clinit>()
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.Storage
com.phonegap.Storage: java.lang.String ALTER
com.phonegap.Storage: java.lang.String CREATE
com.phonegap.Storage: java.lang.String DROP
com.phonegap.Storage: java.lang.String TRUNCATE
com.phonegap.Storage: android.database.sqlite.SQLiteDatabase myDb
com.phonegap.Storage: java.lang.String path
com.phonegap.Storage: java.lang.String dbName
com.phonegap.Storage: Storage()
com.phonegap.Storage: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.Storage: boolean isSynch(java.lang.String)
com.phonegap.Storage: void onDestroy()
com.phonegap.Storage: void setStorage(java.lang.String)
com.phonegap.Storage: void openDatabase(java.lang.String,java.lang.String,java.lang.String,long)
com.phonegap.Storage: void executeSql(java.lang.String,java.lang.String[],java.lang.String)
com.phonegap.Storage: boolean isDDL(java.lang.String)
com.phonegap.Storage: void processResults(android.database.Cursor,java.lang.String)
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.GeoBroker
com.phonegap.GeoBroker: java.util.HashMap geoListeners
com.phonegap.GeoBroker: com.phonegap.GeoListener global
com.phonegap.GeoBroker: GeoBroker()
com.phonegap.GeoBroker: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.GeoBroker: boolean isSynch(java.lang.String)
com.phonegap.GeoBroker: void onDestroy()
com.phonegap.GeoBroker: void getCurrentLocation(boolean,int,int)
com.phonegap.GeoBroker: java.lang.String start(java.lang.String,boolean,int,int)
com.phonegap.GeoBroker: void stop(java.lang.String)
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.ContactAccessorSdk5
com.phonegap.ContactAccessorSdk5: long MAX_PHOTO_SIZE
com.phonegap.ContactAccessorSdk5: java.lang.String EMAIL_REGEXP
com.phonegap.ContactAccessorSdk5: java.util.Map dbMap
com.phonegap.ContactAccessorSdk5: ContactAccessorSdk5(android.webkit.WebView,android.app.Activity)
com.phonegap.ContactAccessorSdk5: org.json.JSONArray search(org.json.JSONArray,org.json.JSONObject)
com.phonegap.ContactAccessorSdk5: org.json.JSONObject getContactById(java.lang.String)
com.phonegap.ContactAccessorSdk5: org.json.JSONArray populateContactArray(int,java.util.HashMap,android.database.Cursor)
com.phonegap.ContactAccessorSdk5: com.phonegap.ContactAccessor$WhereOptions buildIdClause(java.util.Set,java.lang.String)
com.phonegap.ContactAccessorSdk5: org.json.JSONObject populateContact(org.json.JSONObject,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray)
com.phonegap.ContactAccessorSdk5: com.phonegap.ContactAccessor$WhereOptions buildWhereClause(org.json.JSONArray,java.lang.String)
com.phonegap.ContactAccessorSdk5: boolean isWildCardSearch(org.json.JSONArray)
com.phonegap.ContactAccessorSdk5: org.json.JSONObject organizationQuery(android.database.Cursor)
com.phonegap.ContactAccessorSdk5: org.json.JSONObject addressQuery(android.database.Cursor)
com.phonegap.ContactAccessorSdk5: org.json.JSONObject nameQuery(android.database.Cursor)
com.phonegap.ContactAccessorSdk5: org.json.JSONObject phoneQuery(android.database.Cursor)
com.phonegap.ContactAccessorSdk5: org.json.JSONObject emailQuery(android.database.Cursor)
com.phonegap.ContactAccessorSdk5: org.json.JSONObject imQuery(android.database.Cursor)
com.phonegap.ContactAccessorSdk5: org.json.JSONObject websiteQuery(android.database.Cursor)
com.phonegap.ContactAccessorSdk5: org.json.JSONObject photoQuery(android.database.Cursor,java.lang.String)
com.phonegap.ContactAccessorSdk5: java.lang.String save(org.json.JSONObject)
com.phonegap.ContactAccessorSdk5: java.lang.String modifyContact(java.lang.String,org.json.JSONObject,android.accounts.Account)
com.phonegap.ContactAccessorSdk5: void insertWebsite(java.util.ArrayList,org.json.JSONObject)
com.phonegap.ContactAccessorSdk5: void insertIm(java.util.ArrayList,org.json.JSONObject)
com.phonegap.ContactAccessorSdk5: void insertOrganization(java.util.ArrayList,org.json.JSONObject)
com.phonegap.ContactAccessorSdk5: void insertAddress(java.util.ArrayList,org.json.JSONObject)
com.phonegap.ContactAccessorSdk5: void insertEmail(java.util.ArrayList,org.json.JSONObject)
com.phonegap.ContactAccessorSdk5: void insertPhone(java.util.ArrayList,org.json.JSONObject)
com.phonegap.ContactAccessorSdk5: void insertPhoto(java.util.ArrayList,org.json.JSONObject)
com.phonegap.ContactAccessorSdk5: byte[] getPhotoBytes(java.lang.String)
com.phonegap.ContactAccessorSdk5: java.io.InputStream getPathFromUri(java.lang.String)
com.phonegap.ContactAccessorSdk5: java.lang.String createNewContact(org.json.JSONObject,android.accounts.Account)
com.phonegap.ContactAccessorSdk5: boolean remove(java.lang.String)
com.phonegap.ContactAccessorSdk5: int getPhoneType(java.lang.String)
com.phonegap.ContactAccessorSdk5: java.lang.String getPhoneType(int)
com.phonegap.ContactAccessorSdk5: int getContactType(java.lang.String)
com.phonegap.ContactAccessorSdk5: java.lang.String getContactType(int)
com.phonegap.ContactAccessorSdk5: int getOrgType(java.lang.String)
com.phonegap.ContactAccessorSdk5: java.lang.String getOrgType(int)
com.phonegap.ContactAccessorSdk5: int getAddressType(java.lang.String)
com.phonegap.ContactAccessorSdk5: java.lang.String getAddressType(int)
com.phonegap.ContactAccessorSdk5: void <clinit>()
com.phonegap.ContactAccessor: java.lang.String LOG_TAG
com.phonegap.ContactAccessor: android.app.Activity mApp
com.phonegap.ContactAccessor: android.webkit.WebView mView
com.phonegap.ContactAccessor: ContactAccessor()
com.phonegap.ContactAccessor: boolean isRequired(java.lang.String,java.util.HashMap)
com.phonegap.ContactAccessor: java.util.HashMap buildPopulationSet(org.json.JSONArray)
com.phonegap.ContactAccessor: java.lang.String getJsonString(org.json.JSONObject,java.lang.String)
com.phonegap.ContactAccessor: java.lang.String save(org.json.JSONObject)
com.phonegap.ContactAccessor: org.json.JSONArray search(org.json.JSONArray,org.json.JSONObject)
com.phonegap.ContactAccessor: org.json.JSONObject getContactById(java.lang.String)
com.phonegap.ContactAccessor: boolean remove(java.lang.String)
com.phonegap.AccelListener
com.phonegap.AccelListener: int STOPPED
com.phonegap.AccelListener: int STARTING
com.phonegap.AccelListener: int RUNNING
com.phonegap.AccelListener: int ERROR_FAILED_TO_START
com.phonegap.AccelListener: float TIMEOUT
com.phonegap.AccelListener: float x
com.phonegap.AccelListener: float y
com.phonegap.AccelListener: float z
com.phonegap.AccelListener: long timestamp
com.phonegap.AccelListener: int status
com.phonegap.AccelListener: long lastAccessTime
com.phonegap.AccelListener: android.hardware.SensorManager sensorManager
com.phonegap.AccelListener: android.hardware.Sensor mSensor
com.phonegap.AccelListener: AccelListener()
com.phonegap.AccelListener: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.AccelListener: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.AccelListener: boolean isSynch(java.lang.String)
com.phonegap.AccelListener: void onDestroy()
com.phonegap.AccelListener: int start()
com.phonegap.AccelListener: void stop()
com.phonegap.AccelListener: void onAccuracyChanged(android.hardware.Sensor,int)
com.phonegap.AccelListener: void onSensorChanged(android.hardware.SensorEvent)
com.phonegap.AccelListener: int getStatus()
com.phonegap.AccelListener: void setTimeout(float)
com.phonegap.AccelListener: float getTimeout()
com.phonegap.AccelListener: void setStatus(int)
com.phonegap.AccelListener: void <clinit>()
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.DroidGap$GapViewClient
com.phonegap.DroidGap$GapViewClient: com.phonegap.DroidGap ctx
com.phonegap.DroidGap$GapViewClient: com.phonegap.DroidGap this$0
com.phonegap.DroidGap$GapViewClient: DroidGap$GapViewClient(com.phonegap.DroidGap,com.phonegap.DroidGap)
com.phonegap.DroidGap$GapViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
com.phonegap.DroidGap$GapViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)
com.phonegap.DroidGap$GapViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)
com.phonegap.DroidGap$GapViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)
com.phonegap.DroidGap$GapViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)
com.phonegap.api.IPlugin
com.phonegap.api.IPlugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.IPlugin: boolean isSynch(java.lang.String)
com.phonegap.api.IPlugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.IPlugin: void setView(android.webkit.WebView)
com.phonegap.api.IPlugin: void onPause(boolean)
com.phonegap.api.IPlugin: void onResume(boolean)
com.phonegap.api.IPlugin: void onNewIntent(android.content.Intent)
com.phonegap.api.IPlugin: void onDestroy()
com.phonegap.api.IPlugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.IPlugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.IPlugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.file.EncodingException
com.phonegap.file.EncodingException: EncodingException(java.lang.String)
com.phonegap.api.PluginManager
com.phonegap.api.PluginManager: java.util.HashMap plugins
com.phonegap.api.PluginManager: java.util.HashMap services
com.phonegap.api.PluginManager: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.PluginManager: android.webkit.WebView app
com.phonegap.api.PluginManager: java.util.HashMap urlMap
com.phonegap.api.PluginManager: PluginManager(android.webkit.WebView,com.phonegap.api.PhonegapActivity)
com.phonegap.api.PluginManager: void reinit()
com.phonegap.api.PluginManager: void loadPlugins()
com.phonegap.api.PluginManager: java.lang.String exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.phonegap.api.PluginManager: java.lang.Class getClassByName(java.lang.String)
com.phonegap.api.PluginManager: boolean isPhoneGapPlugin(java.lang.Class)
com.phonegap.api.PluginManager: com.phonegap.api.IPlugin addPlugin(java.lang.String,java.lang.String)
com.phonegap.api.PluginManager: com.phonegap.api.IPlugin getPlugin(java.lang.String)
com.phonegap.api.PluginManager: void addService(java.lang.String,java.lang.String)
com.phonegap.api.PluginManager: void onPause(boolean)
com.phonegap.api.PluginManager: void onResume(boolean)
com.phonegap.api.PluginManager: void onDestroy()
com.phonegap.api.PluginManager: void postMessage(java.lang.String,java.lang.Object)
com.phonegap.api.PluginManager: void onNewIntent(android.content.Intent)
com.phonegap.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.PluginManager: void pluginConfigurationMissing()
com.phonegap.CallbackServer
com.phonegap.CallbackServer: java.lang.String LOG_TAG
com.phonegap.CallbackServer: java.util.LinkedList javascript
com.phonegap.CallbackServer: int port
com.phonegap.CallbackServer: java.lang.Thread serverThread
com.phonegap.CallbackServer: boolean active
com.phonegap.CallbackServer: boolean empty
com.phonegap.CallbackServer: boolean usePolling
com.phonegap.CallbackServer: java.lang.String token
com.phonegap.CallbackServer: java.lang.String digits
com.phonegap.CallbackServer: CallbackServer()
com.phonegap.CallbackServer: void init(java.lang.String)
com.phonegap.CallbackServer: void reinit(java.lang.String)
com.phonegap.CallbackServer: boolean usePolling()
com.phonegap.CallbackServer: int getPort()
com.phonegap.CallbackServer: java.lang.String getToken()
com.phonegap.CallbackServer: void startServer()
com.phonegap.CallbackServer: void restartServer()
com.phonegap.CallbackServer: void run()
com.phonegap.CallbackServer: void stopServer()
com.phonegap.CallbackServer: void destroy()
com.phonegap.CallbackServer: int getSize()
com.phonegap.CallbackServer: java.lang.String getJavascript()
com.phonegap.CallbackServer: void sendJavascript(java.lang.String)
com.phonegap.CallbackServer: java.lang.String encode(java.lang.String,java.lang.String)
com.phonegap.CallbackServer: void convert(java.lang.String,java.lang.StringBuilder,java.lang.String)
com.phonegap.api.PluginResult
com.phonegap.api.PluginResult: int status
com.phonegap.api.PluginResult: java.lang.String message
com.phonegap.api.PluginResult: boolean keepCallback
com.phonegap.api.PluginResult: java.lang.String cast
com.phonegap.api.PluginResult: java.lang.String[] StatusMessages
com.phonegap.api.PluginResult: PluginResult(com.phonegap.api.PluginResult$Status)
com.phonegap.api.PluginResult: PluginResult(com.phonegap.api.PluginResult$Status,java.lang.String)
com.phonegap.api.PluginResult: PluginResult(com.phonegap.api.PluginResult$Status,org.json.JSONArray,java.lang.String)
com.phonegap.api.PluginResult: PluginResult(com.phonegap.api.PluginResult$Status,org.json.JSONObject,java.lang.String)
com.phonegap.api.PluginResult: PluginResult(com.phonegap.api.PluginResult$Status,org.json.JSONArray)
com.phonegap.api.PluginResult: PluginResult(com.phonegap.api.PluginResult$Status,org.json.JSONObject)
com.phonegap.api.PluginResult: PluginResult(com.phonegap.api.PluginResult$Status,int)
com.phonegap.api.PluginResult: PluginResult(com.phonegap.api.PluginResult$Status,float)
com.phonegap.api.PluginResult: PluginResult(com.phonegap.api.PluginResult$Status,boolean)
com.phonegap.api.PluginResult: void setKeepCallback(boolean)
com.phonegap.api.PluginResult: int getStatus()
com.phonegap.api.PluginResult: java.lang.String getMessage()
com.phonegap.api.PluginResult: boolean getKeepCallback()
com.phonegap.api.PluginResult: java.lang.String getJSONString()
com.phonegap.api.PluginResult: java.lang.String toSuccessCallbackString(java.lang.String)
com.phonegap.api.PluginResult: java.lang.String toErrorCallbackString(java.lang.String)
com.phonegap.api.PluginResult: void <clinit>()
com.phonegap.GeoListener
com.phonegap.GeoListener: int PERMISSION_DENIED
com.phonegap.GeoListener: int POSITION_UNAVAILABLE
com.phonegap.GeoListener: int TIMEOUT
com.phonegap.GeoListener: java.lang.String id
com.phonegap.GeoListener: java.lang.String successCallback
com.phonegap.GeoListener: java.lang.String failCallback
com.phonegap.GeoListener: com.phonegap.GpsListener mGps
com.phonegap.GeoListener: com.phonegap.NetworkListener mNetwork
com.phonegap.GeoListener: android.location.LocationManager mLocMan
com.phonegap.GeoListener: com.phonegap.GeoBroker broker
com.phonegap.GeoListener: int interval
com.phonegap.GeoListener: GeoListener(com.phonegap.GeoBroker,java.lang.String,int)
com.phonegap.GeoListener: void destroy()
com.phonegap.GeoListener: void success(android.location.Location)
com.phonegap.GeoListener: void fail(int,java.lang.String)
com.phonegap.GeoListener: void start(int)
com.phonegap.GeoListener: void stop()
com.phonegap.GeoListener: void <clinit>()
com.phonegap.ContactManager
com.phonegap.ContactManager: com.phonegap.ContactAccessor contactAccessor
com.phonegap.ContactManager: java.lang.String LOG_TAG
com.phonegap.ContactManager: int UNKNOWN_ERROR
com.phonegap.ContactManager: int INVALID_ARGUMENT_ERROR
com.phonegap.ContactManager: int TIMEOUT_ERROR
com.phonegap.ContactManager: int PENDING_OPERATION_ERROR
com.phonegap.ContactManager: int IO_ERROR
com.phonegap.ContactManager: int NOT_SUPPORTED_ERROR
com.phonegap.ContactManager: int PERMISSION_DENIED_ERROR
com.phonegap.ContactManager: ContactManager()
com.phonegap.ContactManager: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.TempListener
com.phonegap.TempListener: android.hardware.Sensor mSensor
com.phonegap.TempListener: android.hardware.SensorManager sensorManager
com.phonegap.TempListener: TempListener()
com.phonegap.TempListener: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.TempListener: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.TempListener: void onDestroy()
com.phonegap.TempListener: void start()
com.phonegap.TempListener: void stop()
com.phonegap.TempListener: void onAccuracyChanged(android.hardware.Sensor,int)
com.phonegap.TempListener: void onSensorChanged(android.hardware.SensorEvent)
com.phonegap.api.Plugin: java.lang.String id
com.phonegap.api.Plugin: android.webkit.WebView webView
com.phonegap.api.Plugin: com.phonegap.api.PhonegapActivity ctx
com.phonegap.api.Plugin: Plugin()
com.phonegap.api.Plugin: com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String)
com.phonegap.api.Plugin: boolean isSynch(java.lang.String)
com.phonegap.api.Plugin: void setContext(com.phonegap.api.PhonegapActivity)
com.phonegap.api.Plugin: void setView(android.webkit.WebView)
com.phonegap.api.Plugin: void onPause(boolean)
com.phonegap.api.Plugin: void onResume(boolean)
com.phonegap.api.Plugin: void onNewIntent(android.content.Intent)
com.phonegap.api.Plugin: void onDestroy()
com.phonegap.api.Plugin: void onMessage(java.lang.String,java.lang.Object)
com.phonegap.api.Plugin: void onActivityResult(int,int,android.content.Intent)
com.phonegap.api.Plugin: boolean onOverrideUrlLoading(java.lang.String)
com.phonegap.api.Plugin: void sendJavascript(java.lang.String)
com.phonegap.api.Plugin: void success(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void success(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void success(java.lang.String,java.lang.String)
com.phonegap.api.Plugin: void error(com.phonegap.api.PluginResult,java.lang.String)
com.phonegap.api.Plugin: void error(org.json.JSONObject,java.lang.String)
com.phonegap.api.Plugin: void error(java.lang.String,java.lang.String)
com.phonegap.FileUploadResult
com.phonegap.FileUploadResult: long bytesSent
com.phonegap.FileUploadResult: int responseCode
com.phonegap.FileUploadResult: java.lang.String response
com.phonegap.FileUploadResult: FileUploadResult()
com.phonegap.FileUploadResult: long getBytesSent()
com.phonegap.FileUploadResult: void setBytesSent(long)
com.phonegap.FileUploadResult: int getResponseCode()
com.phonegap.FileUploadResult: void setResponseCode(int)
com.phonegap.FileUploadResult: java.lang.String getResponse()
com.phonegap.FileUploadResult: void setResponse(java.lang.String)
com.phonegap.FileUploadResult: org.json.JSONObject toJSONObject()
com.phonegap.api.LOG
com.phonegap.api.LOG: int VERBOSE
com.phonegap.api.LOG: int DEBUG
com.phonegap.api.LOG: int INFO
com.phonegap.api.LOG: int WARN
com.phonegap.api.LOG: int ERROR
com.phonegap.api.LOG: int LOGLEVEL
com.phonegap.api.LOG: LOG()
com.phonegap.api.LOG: void setLogLevel(int)
com.phonegap.api.LOG: void setLogLevel(java.lang.String)
com.phonegap.api.LOG: boolean isLoggable(int)
com.phonegap.api.LOG: void v(java.lang.String,java.lang.String)
com.phonegap.api.LOG: void d(java.lang.String,java.lang.String)
com.phonegap.api.LOG: void i(java.lang.String,java.lang.String)
com.phonegap.api.LOG: void w(java.lang.String,java.lang.String)
com.phonegap.api.LOG: void e(java.lang.String,java.lang.String)
com.phonegap.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Throwable)
com.phonegap.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Throwable)
com.phonegap.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Throwable)
com.phonegap.api.LOG: void w(java.lang.String,java.lang.String,java.lang.Throwable)
com.phonegap.api.LOG: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.phonegap.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])
com.phonegap.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])
com.phonegap.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])
com.phonegap.api.LOG: void w(java.lang.String,java.lang.String,java.lang.Object[])
com.phonegap.api.LOG: void e(java.lang.String,java.lang.String,java.lang.Object[])
com.phonegap.api.LOG: void <clinit>()
com.phonegap.api.PhonegapActivity
com.phonegap.DroidGap
com.phonegap.StandAlone
com.jetthoughts.es_socknboots.MainFrame
