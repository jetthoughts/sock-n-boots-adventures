com.jetthoughts.es_socknboots.MainFrame -> com.jetthoughts.es_socknboots.MainFrame:
    void onCreate(android.os.Bundle) -> onCreate
com.phonegap.AccelListener -> com.phonegap.AccelListener:
    int STOPPED -> STOPPED
    int STARTING -> STARTING
    int RUNNING -> RUNNING
    int ERROR_FAILED_TO_START -> ERROR_FAILED_TO_START
    float TIMEOUT -> TIMEOUT
    float x -> x
    float y -> y
    float z -> z
    long timestamp -> timestamp
    int status -> status
    long lastAccessTime -> lastAccessTime
    android.hardware.SensorManager sensorManager -> sensorManager
    android.hardware.Sensor mSensor -> mSensor
    void setContext(com.phonegap.api.PhonegapActivity) -> setContext
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    boolean isSynch(java.lang.String) -> isSynch
    void onDestroy() -> onDestroy
    int start() -> start
    void stop() -> stop
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    int getStatus() -> getStatus
    void setTimeout(float) -> setTimeout
    float getTimeout() -> getTimeout
    void setStatus(int) -> setStatus
com.phonegap.App -> com.phonegap.App:
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    void clearCache() -> clearCache
    void loadUrl(java.lang.String,org.json.JSONObject) -> loadUrl
    void cancelLoadUrl() -> cancelLoadUrl
    void clearHistory() -> clearHistory
    void backHistory() -> backHistory
    void overrideBackbutton(boolean) -> overrideBackbutton
    boolean isBackbuttonOverridden() -> isBackbuttonOverridden
    void exitApp() -> exitApp
com.phonegap.AudioHandler -> com.phonegap.AudioHandler:
    java.lang.String TAG -> TAG
    java.util.HashMap players -> players
    java.util.ArrayList pausedForPhone -> pausedForPhone
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    boolean isSynch(java.lang.String) -> isSynch
    void onDestroy() -> onDestroy
    void onMessage(java.lang.String,java.lang.Object) -> onMessage
    boolean release(java.lang.String) -> release
    void startRecordingAudio(java.lang.String,java.lang.String) -> startRecordingAudio
    void stopRecordingAudio(java.lang.String) -> stopRecordingAudio
    void startPlayingAudio(java.lang.String,java.lang.String) -> startPlayingAudio
    void seekToAudio(java.lang.String,int) -> seekToAudio
    void pausePlayingAudio(java.lang.String) -> pausePlayingAudio
    void stopPlayingAudio(java.lang.String) -> stopPlayingAudio
    float getCurrentPositionAudio(java.lang.String) -> getCurrentPositionAudio
    float getDurationAudio(java.lang.String,java.lang.String) -> getDurationAudio
    void setAudioOutputDevice(int) -> setAudioOutputDevice
    int getAudioOutputDevice() -> getAudioOutputDevice
    void setVolume(java.lang.String,float) -> setVolume
com.phonegap.AudioPlayer -> com.phonegap.AudioPlayer:
    java.lang.String LOG_TAG -> LOG_TAG
    int MEDIA_NONE -> MEDIA_NONE
    int MEDIA_STARTING -> MEDIA_STARTING
    int MEDIA_RUNNING -> MEDIA_RUNNING
    int MEDIA_PAUSED -> MEDIA_PAUSED
    int MEDIA_STOPPED -> MEDIA_STOPPED
    int MEDIA_STATE -> MEDIA_STATE
    int MEDIA_DURATION -> MEDIA_DURATION
    int MEDIA_POSITION -> MEDIA_POSITION
    int MEDIA_ERROR -> MEDIA_ERROR
    int MEDIA_ERR_NONE_ACTIVE -> MEDIA_ERR_NONE_ACTIVE
    int MEDIA_ERR_ABORTED -> MEDIA_ERR_ABORTED
    int MEDIA_ERR_NETWORK -> MEDIA_ERR_NETWORK
    int MEDIA_ERR_DECODE -> MEDIA_ERR_DECODE
    int MEDIA_ERR_NONE_SUPPORTED -> MEDIA_ERR_NONE_SUPPORTED
    com.phonegap.AudioHandler handler -> handler
    java.lang.String id -> id
    int state -> state
    java.lang.String audioFile -> audioFile
    float duration -> duration
    android.media.MediaRecorder recorder -> recorder
    java.lang.String tempFile -> tempFile
    android.media.MediaPlayer mPlayer -> mPlayer
    boolean prepareOnly -> prepareOnly
    void destroy() -> destroy
    void startRecording(java.lang.String) -> startRecording
    void moveFile(java.lang.String) -> moveFile
    void stopRecording() -> stopRecording
    void startPlaying(java.lang.String) -> startPlaying
    void seekToPlaying(int) -> seekToPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    long getCurrentPosition() -> getCurrentPosition
    boolean isStreaming(java.lang.String) -> isStreaming
    float getDuration(java.lang.String) -> getDuration
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    float getDurationInSeconds() -> getDurationInSeconds
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void setState(int) -> setState
    int getState() -> getState
    void setVolume(float) -> setVolume
com.phonegap.BatteryListener -> com.phonegap.BatteryListener:
    java.lang.String LOG_TAG -> LOG_TAG
    android.content.BroadcastReceiver receiver -> receiver
    java.lang.String batteryCallbackId -> batteryCallbackId
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    void onDestroy() -> onDestroy
    void removeBatteryListener() -> removeBatteryListener
    org.json.JSONObject getBatteryInfo(android.content.Intent) -> getBatteryInfo
    void updateBatteryInfo(android.content.Intent) -> updateBatteryInfo
    void sendUpdate(org.json.JSONObject,boolean) -> sendUpdate
    void access$000(com.phonegap.BatteryListener,android.content.Intent) -> access$000
com.phonegap.BatteryListener$1 -> com.phonegap.k:
    com.phonegap.BatteryListener this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.phonegap.CallbackServer -> com.phonegap.CallbackServer:
    java.lang.String LOG_TAG -> LOG_TAG
    java.util.LinkedList javascript -> javascript
    int port -> port
    java.lang.Thread serverThread -> serverThread
    boolean active -> active
    boolean empty -> empty
    boolean usePolling -> usePolling
    java.lang.String token -> token
    java.lang.String digits -> digits
    void init(java.lang.String) -> init
    void reinit(java.lang.String) -> reinit
    boolean usePolling() -> usePolling
    int getPort() -> getPort
    java.lang.String getToken() -> getToken
    void startServer() -> startServer
    void restartServer() -> restartServer
    void run() -> run
    void stopServer() -> stopServer
    void destroy() -> destroy
    int getSize() -> getSize
    java.lang.String getJavascript() -> getJavascript
    void sendJavascript(java.lang.String) -> sendJavascript
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    void convert(java.lang.String,java.lang.StringBuilder,java.lang.String) -> convert
com.phonegap.CameraLauncher -> com.phonegap.CameraLauncher:
    int DATA_URL -> DATA_URL
    int FILE_URI -> FILE_URI
    int PHOTOLIBRARY -> PHOTOLIBRARY
    int CAMERA -> CAMERA
    int SAVEDPHOTOALBUM -> SAVEDPHOTOALBUM
    int PICTURE -> PICTURE
    int VIDEO -> VIDEO
    int ALLMEDIA -> ALLMEDIA
    int JPEG -> JPEG
    int PNG -> PNG
    java.lang.String GET_PICTURE -> GET_PICTURE
    java.lang.String GET_VIDEO -> GET_VIDEO
    java.lang.String GET_All -> GET_All
    java.lang.String LOG_TAG -> LOG_TAG
    int mQuality -> mQuality
    int targetWidth -> targetWidth
    int targetHeight -> targetHeight
    android.net.Uri imageUri -> imageUri
    int encodingType -> encodingType
    int mediaType -> mediaType
    java.lang.String callbackId -> callbackId
    int numPics -> numPics
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    void takePicture(int,int) -> takePicture
    java.io.File createCaptureFile(int) -> createCaptureFile
    void getImage(int,int) -> getImage
    android.graphics.Bitmap scaleBitmap(android.graphics.Bitmap) -> scaleBitmap
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.database.Cursor queryImgDB() -> queryImgDB
    void checkForDuplicateImage(int) -> checkForDuplicateImage
    void processPicture(android.graphics.Bitmap) -> processPicture
    void failPicture(java.lang.String) -> failPicture
com.phonegap.Capture -> com.phonegap.Capture:
    java.lang.String VIDEO_3GPP -> VIDEO_3GPP
    java.lang.String AUDIO_3GPP -> AUDIO_3GPP
    java.lang.String IMAGE_JPEG -> IMAGE_JPEG
    int CAPTURE_AUDIO -> CAPTURE_AUDIO
    int CAPTURE_IMAGE -> CAPTURE_IMAGE
    int CAPTURE_VIDEO -> CAPTURE_VIDEO
    java.lang.String LOG_TAG -> LOG_TAG
    int CAPTURE_INTERNAL_ERR -> CAPTURE_INTERNAL_ERR
    int CAPTURE_APPLICATION_BUSY -> CAPTURE_APPLICATION_BUSY
    int CAPTURE_INVALID_ARGUMENT -> CAPTURE_INVALID_ARGUMENT
    int CAPTURE_NO_MEDIA_FILES -> CAPTURE_NO_MEDIA_FILES
    int CAPTURE_NOT_SUPPORTED -> CAPTURE_NOT_SUPPORTED
    java.lang.String callbackId -> callbackId
    long limit -> limit
    double duration -> duration
    org.json.JSONArray results -> results
    android.net.Uri imageUri -> imageUri
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    org.json.JSONObject getFormatData(java.lang.String,java.lang.String) -> getFormatData
    org.json.JSONObject getImageData(java.lang.String,org.json.JSONObject) -> getImageData
    org.json.JSONObject getAudioVideoData(java.lang.String,org.json.JSONObject,boolean) -> getAudioVideoData
    void captureAudio() -> captureAudio
    void captureImage() -> captureImage
    void captureVideo(double) -> captureVideo
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    org.json.JSONObject createMediaFile(android.net.Uri) -> createMediaFile
    org.json.JSONObject createErrorObject(int,java.lang.String) -> createErrorObject
    void fail(org.json.JSONObject) -> fail
com.phonegap.CompassListener -> com.phonegap.CompassListener:
    int STOPPED -> STOPPED
    int STARTING -> STARTING
    int RUNNING -> RUNNING
    int ERROR_FAILED_TO_START -> ERROR_FAILED_TO_START
    long TIMEOUT -> TIMEOUT
    int status -> status
    float heading -> heading
    long timeStamp -> timeStamp
    long lastAccessTime -> lastAccessTime
    int accuracy -> accuracy
    android.hardware.SensorManager sensorManager -> sensorManager
    android.hardware.Sensor mSensor -> mSensor
    void setContext(com.phonegap.api.PhonegapActivity) -> setContext
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    boolean isSynch(java.lang.String) -> isSynch
    void onDestroy() -> onDestroy
    int start() -> start
    void stop() -> stop
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    int getStatus() -> getStatus
    float getHeading() -> getHeading
    void setTimeout(long) -> setTimeout
    long getTimeout() -> getTimeout
    void setStatus(int) -> setStatus
    org.json.JSONObject getCompassHeading() -> getCompassHeading
com.phonegap.ContactAccessor -> com.phonegap.ContactAccessor:
    java.lang.String LOG_TAG -> LOG_TAG
    android.app.Activity mApp -> mApp
    android.webkit.WebView mView -> mView
    boolean isRequired(java.lang.String,java.util.HashMap) -> isRequired
    java.util.HashMap buildPopulationSet(org.json.JSONArray) -> buildPopulationSet
    java.lang.String getJsonString(org.json.JSONObject,java.lang.String) -> getJsonString
    java.lang.String save(org.json.JSONObject) -> save
    org.json.JSONArray search(org.json.JSONArray,org.json.JSONObject) -> search
    org.json.JSONObject getContactById(java.lang.String) -> getContactById
    boolean remove(java.lang.String) -> remove
com.phonegap.ContactAccessor$WhereOptions -> com.phonegap.aa:
    java.lang.String where -> a
    java.lang.String[] whereArgs -> b
    com.phonegap.ContactAccessor this$0 -> c
    void setWhere(java.lang.String) -> a
    java.lang.String getWhere() -> a
    void setWhereArgs(java.lang.String[]) -> a
    java.lang.String[] getWhereArgs() -> b
com.phonegap.ContactAccessorSdk5 -> com.phonegap.ContactAccessorSdk5:
    long MAX_PHOTO_SIZE -> MAX_PHOTO_SIZE
    java.lang.String EMAIL_REGEXP -> EMAIL_REGEXP
    java.util.Map dbMap -> dbMap
    org.json.JSONArray search(org.json.JSONArray,org.json.JSONObject) -> search
    org.json.JSONObject getContactById(java.lang.String) -> getContactById
    org.json.JSONArray populateContactArray(int,java.util.HashMap,android.database.Cursor) -> populateContactArray
    com.phonegap.ContactAccessor$WhereOptions buildIdClause(java.util.Set,java.lang.String) -> buildIdClause
    org.json.JSONObject populateContact(org.json.JSONObject,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray) -> populateContact
    com.phonegap.ContactAccessor$WhereOptions buildWhereClause(org.json.JSONArray,java.lang.String) -> buildWhereClause
    boolean isWildCardSearch(org.json.JSONArray) -> isWildCardSearch
    org.json.JSONObject organizationQuery(android.database.Cursor) -> organizationQuery
    org.json.JSONObject addressQuery(android.database.Cursor) -> addressQuery
    org.json.JSONObject nameQuery(android.database.Cursor) -> nameQuery
    org.json.JSONObject phoneQuery(android.database.Cursor) -> phoneQuery
    org.json.JSONObject emailQuery(android.database.Cursor) -> emailQuery
    org.json.JSONObject imQuery(android.database.Cursor) -> imQuery
    org.json.JSONObject websiteQuery(android.database.Cursor) -> websiteQuery
    org.json.JSONObject photoQuery(android.database.Cursor,java.lang.String) -> photoQuery
    java.lang.String save(org.json.JSONObject) -> save
    java.lang.String modifyContact(java.lang.String,org.json.JSONObject,android.accounts.Account) -> modifyContact
    void insertWebsite(java.util.ArrayList,org.json.JSONObject) -> insertWebsite
    void insertIm(java.util.ArrayList,org.json.JSONObject) -> insertIm
    void insertOrganization(java.util.ArrayList,org.json.JSONObject) -> insertOrganization
    void insertAddress(java.util.ArrayList,org.json.JSONObject) -> insertAddress
    void insertEmail(java.util.ArrayList,org.json.JSONObject) -> insertEmail
    void insertPhone(java.util.ArrayList,org.json.JSONObject) -> insertPhone
    void insertPhoto(java.util.ArrayList,org.json.JSONObject) -> insertPhoto
    byte[] getPhotoBytes(java.lang.String) -> getPhotoBytes
    java.io.InputStream getPathFromUri(java.lang.String) -> getPathFromUri
    java.lang.String createNewContact(org.json.JSONObject,android.accounts.Account) -> createNewContact
    boolean remove(java.lang.String) -> remove
    int getPhoneType(java.lang.String) -> getPhoneType
    java.lang.String getPhoneType(int) -> getPhoneType
    int getContactType(java.lang.String) -> getContactType
    java.lang.String getContactType(int) -> getContactType
    int getOrgType(java.lang.String) -> getOrgType
    java.lang.String getOrgType(int) -> getOrgType
    int getAddressType(java.lang.String) -> getAddressType
    java.lang.String getAddressType(int) -> getAddressType
com.phonegap.ContactManager -> com.phonegap.ContactManager:
    com.phonegap.ContactAccessor contactAccessor -> contactAccessor
    java.lang.String LOG_TAG -> LOG_TAG
    int UNKNOWN_ERROR -> UNKNOWN_ERROR
    int INVALID_ARGUMENT_ERROR -> INVALID_ARGUMENT_ERROR
    int TIMEOUT_ERROR -> TIMEOUT_ERROR
    int PENDING_OPERATION_ERROR -> PENDING_OPERATION_ERROR
    int IO_ERROR -> IO_ERROR
    int NOT_SUPPORTED_ERROR -> NOT_SUPPORTED_ERROR
    int PERMISSION_DENIED_ERROR -> PERMISSION_DENIED_ERROR
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
com.phonegap.CryptoHandler -> com.phonegap.CryptoHandler:
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    void encrypt(java.lang.String,java.lang.String) -> encrypt
    void decrypt(java.lang.String,java.lang.String) -> decrypt
com.phonegap.Device -> com.phonegap.Device:
    java.lang.String TAG -> TAG
    java.lang.String phonegapVersion -> phonegapVersion
    java.lang.String platform -> platform
    java.lang.String uuid -> uuid
    android.content.BroadcastReceiver telephonyReceiver -> telephonyReceiver
    void setContext(com.phonegap.api.PhonegapActivity) -> setContext
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    boolean isSynch(java.lang.String) -> isSynch
    void onDestroy() -> onDestroy
    void initTelephonyReceiver() -> initTelephonyReceiver
    java.lang.String getPlatform() -> getPlatform
    java.lang.String getUuid() -> getUuid
    java.lang.String getPhonegapVersion() -> getPhonegapVersion
    java.lang.String getModel() -> getModel
    java.lang.String getProductName() -> getProductName
    java.lang.String getOSVersion() -> getOSVersion
    java.lang.String getSDKVersion() -> getSDKVersion
    java.lang.String getTimeZoneID() -> getTimeZoneID
com.phonegap.Device$1 -> com.phonegap.ae:
    com.phonegap.api.PhonegapActivity val$myctx -> a
    com.phonegap.Device this$0 -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.phonegap.DirectoryManager -> com.phonegap.DirectoryManager:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean testFileExists(java.lang.String) -> testFileExists
    long getFreeDiskSpace() -> getFreeDiskSpace
    boolean testSaveLocationExists() -> testSaveLocationExists
    java.io.File constructFilePaths(java.lang.String,java.lang.String) -> constructFilePaths
    java.lang.String getTempDirectoryPath(android.content.Context) -> getTempDirectoryPath
com.phonegap.DroidGap -> com.phonegap.DroidGap:
    java.lang.String TAG -> TAG
    android.webkit.WebView appView -> appView
    android.webkit.WebViewClient webViewClient -> webViewClient
    java.util.ArrayList whiteList -> whiteList
    java.util.HashMap whiteListCache -> whiteListCache
    android.widget.LinearLayout root -> root
    boolean bound -> bound
    com.phonegap.CallbackServer callbackServer -> callbackServer
    com.phonegap.api.PluginManager pluginManager -> pluginManager
    boolean cancelLoadUrl -> cancelLoadUrl
    android.app.ProgressDialog spinnerDialog -> spinnerDialog
    java.lang.String url -> url
    java.util.Stack urls -> urls
    java.lang.String initUrl -> initUrl
    int ACTIVITY_STARTING -> ACTIVITY_STARTING
    int ACTIVITY_RUNNING -> ACTIVITY_RUNNING
    int ACTIVITY_EXITING -> ACTIVITY_EXITING
    int activityState -> activityState
    java.lang.String baseUrl -> baseUrl
    com.phonegap.api.IPlugin activityResultCallback -> activityResultCallback
    boolean activityResultKeepRunning -> activityResultKeepRunning
    int loadUrlTimeout -> loadUrlTimeout
    int backgroundColor -> backgroundColor
    int splashscreen -> splashscreen
    int loadUrlTimeoutValue -> loadUrlTimeoutValue
    boolean keepRunning -> keepRunning
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> init
    void setWebViewClient(android.webkit.WebView,android.webkit.WebViewClient) -> setWebViewClient
    void handleActivityParameters() -> handleActivityParameters
    void loadUrl(java.lang.String) -> loadUrl
    void loadUrlIntoView(java.lang.String) -> loadUrlIntoView
    void loadUrl(java.lang.String,int) -> loadUrl
    void loadUrlIntoView(java.lang.String,int) -> loadUrlIntoView
    void cancelLoadUrl() -> cancelLoadUrl
    void clearCache() -> clearCache
    void clearHistory() -> clearHistory
    boolean backHistory() -> backHistory
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean getBooleanProperty(java.lang.String,boolean) -> getBooleanProperty
    int getIntegerProperty(java.lang.String,int) -> getIntegerProperty
    java.lang.String getStringProperty(java.lang.String,java.lang.String) -> getStringProperty
    double getDoubleProperty(java.lang.String,double) -> getDoubleProperty
    void setBooleanProperty(java.lang.String,boolean) -> setBooleanProperty
    void setIntegerProperty(java.lang.String,int) -> setIntegerProperty
    void setStringProperty(java.lang.String,java.lang.String) -> setStringProperty
    void setDoubleProperty(java.lang.String,double) -> setDoubleProperty
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void postMessage(java.lang.String,java.lang.Object) -> postMessage
    void addService(java.lang.String,java.lang.String) -> addService
    void sendJavascript(java.lang.String) -> sendJavascript
    void showWebPage(java.lang.String,boolean,boolean,java.util.HashMap) -> showWebPage
    void spinnerStart(java.lang.String,java.lang.String) -> spinnerStart
    void spinnerStop() -> spinnerStop
    void endActivity() -> endActivity
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityForResult(com.phonegap.api.IPlugin,android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setActivityResultCallback(com.phonegap.api.IPlugin) -> setActivityResultCallback
    void onReceivedError(int,java.lang.String,java.lang.String) -> onReceivedError
    void displayError(java.lang.String,java.lang.String,java.lang.String,boolean) -> displayError
    void loadConfiguration() -> loadConfiguration
    void addWhiteListEntry(java.lang.String,boolean) -> addWhiteListEntry
    boolean isUrlWhiteListed(java.lang.String) -> isUrlWhiteListed
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void access$000(com.phonegap.DroidGap) -> access$000
    java.util.Stack access$100(com.phonegap.DroidGap) -> access$100
    int access$200(com.phonegap.DroidGap) -> access$200
    void access$300(com.phonegap.DroidGap,java.lang.String) -> access$300
    java.lang.String access$400(com.phonegap.DroidGap) -> access$400
    boolean access$500(com.phonegap.DroidGap,java.lang.String) -> access$500
    int access$208(com.phonegap.DroidGap) -> access$208
com.phonegap.DroidGap$1 -> com.phonegap.t:
    com.phonegap.DroidGap val$me -> a
    java.lang.String val$url -> b
    com.phonegap.DroidGap this$0 -> c
    void run() -> run
com.phonegap.DroidGap$1$1 -> com.phonegap.aj:
    int val$currentLoadUrlTimeout -> a
    com.phonegap.DroidGap$1 this$1 -> b
    void run() -> run
com.phonegap.DroidGap$2 -> com.phonegap.s:
    com.phonegap.DroidGap val$me -> a
    com.phonegap.DroidGap this$0 -> b
    void run() -> run
com.phonegap.DroidGap$3 -> com.phonegap.r:
    int val$time -> a
    com.phonegap.DroidGap val$me -> b
    java.lang.String val$url -> c
    com.phonegap.DroidGap this$0 -> d
    void run() -> run
com.phonegap.DroidGap$4 -> com.phonegap.q:
    com.phonegap.DroidGap val$me -> a
    com.phonegap.DroidGap this$0 -> b
    void onCancel(android.content.DialogInterface) -> onCancel
com.phonegap.DroidGap$5 -> com.phonegap.p:
    com.phonegap.DroidGap val$me -> a
    java.lang.String val$errorUrl -> b
    com.phonegap.DroidGap this$0 -> c
    void run() -> run
com.phonegap.DroidGap$6 -> com.phonegap.n:
    com.phonegap.DroidGap val$me -> a
    java.lang.String val$description -> b
    java.lang.String val$failingUrl -> c
    com.phonegap.DroidGap this$0 -> d
    void run() -> run
com.phonegap.DroidGap$7 -> com.phonegap.m:
    com.phonegap.DroidGap val$me -> a
    java.lang.String val$message -> c
    java.lang.String val$title -> d
    java.lang.String val$button -> e
    boolean val$exit -> b
    com.phonegap.DroidGap this$0 -> f
    void run() -> run
com.phonegap.DroidGap$7$1 -> com.phonegap.h:
    com.phonegap.DroidGap$7 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.phonegap.DroidGap$GapClient -> com.phonegap.DroidGap$GapClient:
    java.lang.String TAG -> TAG
    long MAX_QUOTA -> MAX_QUOTA
    com.phonegap.DroidGap ctx -> ctx
    com.phonegap.DroidGap this$0 -> this$0
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onConsoleMessage(java.lang.String,int,java.lang.String) -> onConsoleMessage
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
com.phonegap.DroidGap$GapClient$1 -> com.phonegap.w:
    android.webkit.JsResult val$result -> a
    com.phonegap.DroidGap$GapClient this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.phonegap.DroidGap$GapClient$2 -> com.phonegap.v:
    android.webkit.JsResult val$result -> a
    com.phonegap.DroidGap$GapClient this$1 -> b
    void onCancel(android.content.DialogInterface) -> onCancel
com.phonegap.DroidGap$GapClient$3 -> com.phonegap.u:
    android.webkit.JsResult val$result -> a
    com.phonegap.DroidGap$GapClient this$1 -> b
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.phonegap.DroidGap$GapClient$4 -> com.phonegap.d:
    android.webkit.JsResult val$result -> a
    com.phonegap.DroidGap$GapClient this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.phonegap.DroidGap$GapClient$5 -> com.phonegap.e:
    android.webkit.JsResult val$result -> a
    com.phonegap.DroidGap$GapClient this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.phonegap.DroidGap$GapClient$6 -> com.phonegap.f:
    android.webkit.JsResult val$result -> a
    com.phonegap.DroidGap$GapClient this$1 -> b
    void onCancel(android.content.DialogInterface) -> onCancel
com.phonegap.DroidGap$GapClient$7 -> com.phonegap.g:
    android.webkit.JsResult val$result -> a
    com.phonegap.DroidGap$GapClient this$1 -> b
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.phonegap.DroidGap$GapClient$8 -> com.phonegap.a:
    android.widget.EditText val$input -> a
    android.webkit.JsPromptResult val$res -> b
    com.phonegap.DroidGap$GapClient this$1 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.phonegap.DroidGap$GapClient$9 -> com.phonegap.b:
    android.webkit.JsPromptResult val$res -> a
    com.phonegap.DroidGap$GapClient this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.phonegap.DroidGap$GapViewClient -> com.phonegap.DroidGap$GapViewClient:
    com.phonegap.DroidGap ctx -> ctx
    com.phonegap.DroidGap this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
com.phonegap.DroidGap$GapViewClient$1 -> com.phonegap.ak:
    com.phonegap.DroidGap$GapViewClient this$1 -> a
    void run() -> run
com.phonegap.DroidGap$GapViewClient$1$1 -> com.phonegap.ab:
    com.phonegap.DroidGap$GapViewClient$1 this$2 -> a
    void run() -> run
com.phonegap.DroidGap$LinearLayoutSoftKeyboardDetect -> com.phonegap.ad:
    int oldHeight -> a
    int oldWidth -> b
    int screenWidth -> c
    int screenHeight -> d
    com.phonegap.DroidGap this$0 -> e
    void onMeasure(int,int) -> onMeasure
com.phonegap.ExifHelper -> com.phonegap.ExifHelper:
    java.lang.String aperature -> aperature
    java.lang.String datetime -> datetime
    java.lang.String exposureTime -> exposureTime
    java.lang.String flash -> flash
    java.lang.String focalLength -> focalLength
    java.lang.String gpsAltitude -> gpsAltitude
    java.lang.String gpsAltitudeRef -> gpsAltitudeRef
    java.lang.String gpsDateStamp -> gpsDateStamp
    java.lang.String gpsLatitude -> gpsLatitude
    java.lang.String gpsLatitudeRef -> gpsLatitudeRef
    java.lang.String gpsLongitude -> gpsLongitude
    java.lang.String gpsLongitudeRef -> gpsLongitudeRef
    java.lang.String gpsProcessingMethod -> gpsProcessingMethod
    java.lang.String gpsTimestamp -> gpsTimestamp
    java.lang.String iso -> iso
    java.lang.String make -> make
    java.lang.String model -> model
    java.lang.String orientation -> orientation
    java.lang.String whiteBalance -> whiteBalance
    android.media.ExifInterface inFile -> inFile
    android.media.ExifInterface outFile -> outFile
    void createInFile(java.lang.String) -> createInFile
    void createOutFile(java.lang.String) -> createOutFile
    void readExifData() -> readExifData
    void writeExifData() -> writeExifData
com.phonegap.FileTransfer -> com.phonegap.FileTransfer:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String LINE_START -> LINE_START
    java.lang.String LINE_END -> LINE_END
    java.lang.String BOUNDRY -> BOUNDRY
    int FILE_NOT_FOUND_ERR -> FILE_NOT_FOUND_ERR
    int INVALID_URL_ERR -> INVALID_URL_ERR
    int CONNECTION_ERR -> CONNECTION_ERR
    javax.net.ssl.SSLSocketFactory defaultSSLSocketFactory -> defaultSSLSocketFactory
    javax.net.ssl.HostnameVerifier defaultHostnameVerifier -> defaultHostnameVerifier
    javax.net.ssl.HostnameVerifier DO_NOT_VERIFY -> DO_NOT_VERIFY
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    void trustAllHosts() -> trustAllHosts
    org.json.JSONObject createFileTransferError(int,java.lang.String,java.lang.String) -> createFileTransferError
    java.lang.String getArgument(org.json.JSONArray,int,java.lang.String) -> getArgument
    com.phonegap.FileUploadResult upload(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.json.JSONObject,boolean,boolean) -> upload
    org.json.JSONObject download(java.lang.String,java.lang.String) -> download
    java.io.InputStream getPathFromUri(java.lang.String) -> getPathFromUri
com.phonegap.FileTransfer$1 -> com.phonegap.z:
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.phonegap.FileTransfer$2 -> com.phonegap.ac:
    com.phonegap.FileTransfer this$0 -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.phonegap.FileUploadResult -> com.phonegap.FileUploadResult:
    long bytesSent -> bytesSent
    int responseCode -> responseCode
    java.lang.String response -> response
    long getBytesSent() -> getBytesSent
    void setBytesSent(long) -> setBytesSent
    int getResponseCode() -> getResponseCode
    void setResponseCode(int) -> setResponseCode
    java.lang.String getResponse() -> getResponse
    void setResponse(java.lang.String) -> setResponse
    org.json.JSONObject toJSONObject() -> toJSONObject
com.phonegap.FileUtils -> com.phonegap.FileUtils:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String _DATA -> _DATA
    int NOT_FOUND_ERR -> NOT_FOUND_ERR
    int SECURITY_ERR -> SECURITY_ERR
    int ABORT_ERR -> ABORT_ERR
    int NOT_READABLE_ERR -> NOT_READABLE_ERR
    int ENCODING_ERR -> ENCODING_ERR
    int NO_MODIFICATION_ALLOWED_ERR -> NO_MODIFICATION_ALLOWED_ERR
    int INVALID_STATE_ERR -> INVALID_STATE_ERR
    int SYNTAX_ERR -> SYNTAX_ERR
    int INVALID_MODIFICATION_ERR -> INVALID_MODIFICATION_ERR
    int QUOTA_EXCEEDED_ERR -> QUOTA_EXCEEDED_ERR
    int TYPE_MISMATCH_ERR -> TYPE_MISMATCH_ERR
    int PATH_EXISTS_ERR -> PATH_EXISTS_ERR
    int TEMPORARY -> TEMPORARY
    int PERSISTENT -> PERSISTENT
    int RESOURCE -> RESOURCE
    int APPLICATION -> APPLICATION
    java.io.FileReader f_in -> f_in
    java.io.FileWriter f_out -> f_out
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    void notifyDelete(java.lang.String) -> notifyDelete
    org.json.JSONObject resolveLocalFileSystemURI(java.lang.String) -> resolveLocalFileSystemURI
    org.json.JSONArray readEntries(java.lang.String) -> readEntries
    org.json.JSONObject transferTo(java.lang.String,org.json.JSONObject,java.lang.String,boolean) -> transferTo
    java.io.File createDestination(java.lang.String,java.io.File,java.io.File) -> createDestination
    org.json.JSONObject copyFile(java.io.File,java.io.File) -> copyFile
    org.json.JSONObject copyDirectory(java.io.File,java.io.File) -> copyDirectory
    boolean isCopyOnItself(java.lang.String,java.lang.String) -> isCopyOnItself
    org.json.JSONObject moveFile(java.io.File,java.io.File) -> moveFile
    org.json.JSONObject moveDirectory(java.io.File,java.io.File) -> moveDirectory
    boolean removeRecursively(java.lang.String) -> removeRecursively
    boolean removeDirRecursively(java.io.File) -> removeDirRecursively
    boolean remove(java.lang.String) -> remove
    org.json.JSONObject getFile(java.lang.String,java.lang.String,org.json.JSONObject,boolean) -> getFile
    java.io.File createFileObject(java.lang.String,java.lang.String) -> createFileObject
    org.json.JSONObject getParent(java.lang.String) -> getParent
    boolean atRootDirectory(java.lang.String) -> atRootDirectory
    org.json.JSONObject getMetadata(java.lang.String) -> getMetadata
    org.json.JSONObject getFileMetadata(java.lang.String) -> getFileMetadata
    org.json.JSONObject requestFileSystem(int) -> requestFileSystem
    org.json.JSONObject getEntry(java.io.File) -> getEntry
    org.json.JSONObject getEntry(java.lang.String) -> getEntry
    boolean isSynch(java.lang.String) -> isSynch
    java.lang.String readAsText(java.lang.String,java.lang.String) -> readAsText
    java.lang.String readAsDataURL(java.lang.String) -> readAsDataURL
    java.lang.String getMimeType(java.lang.String) -> getMimeType
    long write(java.lang.String,java.lang.String,int) -> write
    long truncateFile(java.lang.String,long) -> truncateFile
    java.io.InputStream getPathFromUri(java.lang.String) -> getPathFromUri
    java.lang.String getRealPathFromURI(android.net.Uri,com.phonegap.api.PhonegapActivity) -> getRealPathFromURI
com.phonegap.GapView -> com.phonegap.GapView:
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addViewInLayout
    boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> addViewInLayout
com.phonegap.GeoBroker -> com.phonegap.GeoBroker:
    java.util.HashMap geoListeners -> geoListeners
    com.phonegap.GeoListener global -> global
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    boolean isSynch(java.lang.String) -> isSynch
    void onDestroy() -> onDestroy
    void getCurrentLocation(boolean,int,int) -> getCurrentLocation
    java.lang.String start(java.lang.String,boolean,int,int) -> start
    void stop(java.lang.String) -> stop
com.phonegap.GeoListener -> com.phonegap.GeoListener:
    int PERMISSION_DENIED -> PERMISSION_DENIED
    int POSITION_UNAVAILABLE -> POSITION_UNAVAILABLE
    int TIMEOUT -> TIMEOUT
    java.lang.String id -> id
    java.lang.String successCallback -> successCallback
    java.lang.String failCallback -> failCallback
    com.phonegap.GpsListener mGps -> mGps
    com.phonegap.NetworkListener mNetwork -> mNetwork
    android.location.LocationManager mLocMan -> mLocMan
    com.phonegap.GeoBroker broker -> broker
    int interval -> interval
    void destroy() -> destroy
    void success(android.location.Location) -> success
    void fail(int,java.lang.String) -> fail
    void start(int) -> start
    void stop() -> stop
com.phonegap.GpsListener -> com.phonegap.GpsListener:
    com.phonegap.api.PhonegapActivity mCtx -> mCtx
    android.location.LocationManager mLocMan -> mLocMan
    com.phonegap.GeoListener owner -> owner
    boolean hasData -> hasData
    android.location.Location cLoc -> cLoc
    boolean running -> running
    android.location.Location getLocation() -> getLocation
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    boolean hasLocation() -> hasLocation
    void start(int) -> start
    void stop() -> stop
com.phonegap.HttpHandler -> com.phonegap.HttpHandler:
    java.lang.Boolean get(java.lang.String,java.lang.String) -> get
    org.apache.http.HttpEntity getHttpEntity(java.lang.String) -> getHttpEntity
    void writeToDisk(org.apache.http.HttpEntity,java.lang.String) -> writeToDisk
com.phonegap.NetworkListener -> com.phonegap.NetworkListener:
    com.phonegap.api.PhonegapActivity mCtx -> mCtx
    android.location.LocationManager mLocMan -> mLocMan
    com.phonegap.GeoListener owner -> owner
    boolean hasData -> hasData
    android.location.Location cLoc -> cLoc
    boolean running -> running
    android.location.Location getLocation() -> getLocation
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void start(int) -> start
    void stop() -> stop
com.phonegap.NetworkManager -> com.phonegap.NetworkManager:
    int NOT_REACHABLE -> NOT_REACHABLE
    int REACHABLE_VIA_CARRIER_DATA_NETWORK -> REACHABLE_VIA_CARRIER_DATA_NETWORK
    int REACHABLE_VIA_WIFI_NETWORK -> REACHABLE_VIA_WIFI_NETWORK
    java.lang.String WIFI -> WIFI
    java.lang.String WIMAX -> WIMAX
    java.lang.String MOBILE -> MOBILE
    java.lang.String GSM -> GSM
    java.lang.String GPRS -> GPRS
    java.lang.String EDGE -> EDGE
    java.lang.String CDMA -> CDMA
    java.lang.String UMTS -> UMTS
    java.lang.String HSPA -> HSPA
    java.lang.String HSUPA -> HSUPA
    java.lang.String HSDPA -> HSDPA
    java.lang.String ONEXRTT -> ONEXRTT
    java.lang.String EHRPD -> EHRPD
    java.lang.String LTE -> LTE
    java.lang.String UMB -> UMB
    java.lang.String HSPA_PLUS -> HSPA_PLUS
    java.lang.String TYPE_UNKNOWN -> TYPE_UNKNOWN
    java.lang.String TYPE_ETHERNET -> TYPE_ETHERNET
    java.lang.String TYPE_WIFI -> TYPE_WIFI
    java.lang.String TYPE_2G -> TYPE_2G
    java.lang.String TYPE_3G -> TYPE_3G
    java.lang.String TYPE_4G -> TYPE_4G
    java.lang.String TYPE_NONE -> TYPE_NONE
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String connectionCallbackId -> connectionCallbackId
    android.net.ConnectivityManager sockMan -> sockMan
    android.content.BroadcastReceiver receiver -> receiver
    void setContext(com.phonegap.api.PhonegapActivity) -> setContext
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    boolean isSynch(java.lang.String) -> isSynch
    void onDestroy() -> onDestroy
    void updateConnectionInfo(android.net.NetworkInfo) -> updateConnectionInfo
    java.lang.String getConnectionInfo(android.net.NetworkInfo) -> getConnectionInfo
    void sendUpdate(java.lang.String) -> sendUpdate
    java.lang.String getType(android.net.NetworkInfo) -> getType
    void access$000(com.phonegap.NetworkManager,android.net.NetworkInfo) -> access$000
com.phonegap.NetworkManager$1 -> com.phonegap.j:
    com.phonegap.NetworkManager this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.phonegap.Notification -> com.phonegap.Notification:
    int confirmResult -> confirmResult
    android.app.ProgressDialog spinnerDialog -> spinnerDialog
    android.app.ProgressDialog progressDialog -> progressDialog
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    boolean isSynch(java.lang.String) -> isSynch
    void beep(long) -> beep
    void vibrate(long) -> vibrate
    void alert(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> alert
    void confirm(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> confirm
    void activityStart(java.lang.String,java.lang.String) -> activityStart
    void activityStop() -> activityStop
    void progressStart(java.lang.String,java.lang.String) -> progressStart
    void progressValue(int) -> progressValue
    void progressStop() -> progressStop
com.phonegap.Notification$1 -> com.phonegap.ag:
    com.phonegap.api.PhonegapActivity val$ctx -> c
    java.lang.String val$message -> d
    java.lang.String val$title -> e
    java.lang.String val$buttonLabel -> f
    com.phonegap.Notification val$notification -> a
    java.lang.String val$callbackId -> b
    com.phonegap.Notification this$0 -> g
    void run() -> run
com.phonegap.Notification$1$1 -> com.phonegap.i:
    com.phonegap.Notification$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.phonegap.Notification$2 -> com.phonegap.ai:
    com.phonegap.api.PhonegapActivity val$ctx -> c
    java.lang.String val$message -> d
    java.lang.String val$title -> e
    java.lang.String[] val$fButtons -> f
    com.phonegap.Notification val$notification -> a
    java.lang.String val$callbackId -> b
    com.phonegap.Notification this$0 -> g
    void run() -> run
com.phonegap.Notification$2$1 -> com.phonegap.c:
    com.phonegap.Notification$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.phonegap.Notification$2$2 -> com.phonegap.x:
    com.phonegap.Notification$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.phonegap.Notification$2$3 -> com.phonegap.y:
    com.phonegap.Notification$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.phonegap.Notification$3 -> com.phonegap.ah:
    com.phonegap.Notification val$notification -> a
    com.phonegap.api.PhonegapActivity val$ctx -> b
    java.lang.String val$title -> c
    java.lang.String val$message -> d
    com.phonegap.Notification this$0 -> e
    void run() -> run
com.phonegap.Notification$3$1 -> com.phonegap.o:
    com.phonegap.Notification$3 this$1 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.phonegap.Notification$4 -> com.phonegap.af:
    com.phonegap.Notification val$notification -> a
    com.phonegap.api.PhonegapActivity val$ctx -> b
    java.lang.String val$title -> c
    java.lang.String val$message -> d
    com.phonegap.Notification this$0 -> e
    void run() -> run
com.phonegap.Notification$4$1 -> com.phonegap.l:
    com.phonegap.Notification$4 this$1 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.phonegap.SimpleCrypto -> com.phonegap.SimpleCrypto:
    java.lang.String HEX -> HEX
    java.lang.String encrypt(java.lang.String,java.lang.String) -> encrypt
    java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
    byte[] getRawKey(byte[]) -> getRawKey
    byte[] encrypt(byte[],byte[]) -> encrypt
    byte[] decrypt(byte[],byte[]) -> decrypt
    java.lang.String toHex(java.lang.String) -> toHex
    java.lang.String fromHex(java.lang.String) -> fromHex
    byte[] toByte(java.lang.String) -> toByte
    java.lang.String toHex(byte[]) -> toHex
    void appendHex(java.lang.StringBuffer,byte) -> appendHex
com.phonegap.StandAlone -> com.phonegap.StandAlone:
    void onCreate(android.os.Bundle) -> onCreate
com.phonegap.Storage -> com.phonegap.Storage:
    java.lang.String ALTER -> ALTER
    java.lang.String CREATE -> CREATE
    java.lang.String DROP -> DROP
    java.lang.String TRUNCATE -> TRUNCATE
    android.database.sqlite.SQLiteDatabase myDb -> myDb
    java.lang.String path -> path
    java.lang.String dbName -> dbName
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    boolean isSynch(java.lang.String) -> isSynch
    void onDestroy() -> onDestroy
    void setStorage(java.lang.String) -> setStorage
    void openDatabase(java.lang.String,java.lang.String,java.lang.String,long) -> openDatabase
    void executeSql(java.lang.String,java.lang.String[],java.lang.String) -> executeSql
    boolean isDDL(java.lang.String) -> isDDL
    void processResults(android.database.Cursor,java.lang.String) -> processResults
com.phonegap.TempListener -> com.phonegap.TempListener:
    android.hardware.Sensor mSensor -> mSensor
    android.hardware.SensorManager sensorManager -> sensorManager
    void setContext(com.phonegap.api.PhonegapActivity) -> setContext
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    void onDestroy() -> onDestroy
    void start() -> start
    void stop() -> stop
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.phonegap.WebViewReflect -> com.phonegap.WebViewReflect:
    java.lang.reflect.Method mWebSettings_setDatabaseEnabled -> mWebSettings_setDatabaseEnabled
    java.lang.reflect.Method mWebSettings_setDatabasePath -> mWebSettings_setDatabasePath
    java.lang.reflect.Method mWebSettings_setDomStorageEnabled -> mWebSettings_setDomStorageEnabled
    java.lang.reflect.Method mWebSettings_setGeolocationEnabled -> mWebSettings_setGeolocationEnabled
    void setDatabaseEnabled(boolean) -> setDatabaseEnabled
    void checkCompatibility() -> checkCompatibility
    void setStorage(android.webkit.WebSettings,boolean,java.lang.String) -> setStorage
    void setGeolocationEnabled(android.webkit.WebSettings,boolean) -> setGeolocationEnabled
    void setDomStorage(android.webkit.WebSettings) -> setDomStorage
com.phonegap.api.IPlugin -> com.phonegap.api.IPlugin:
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    boolean isSynch(java.lang.String) -> isSynch
    void setContext(com.phonegap.api.PhonegapActivity) -> setContext
    void setView(android.webkit.WebView) -> setView
    void onPause(boolean) -> onPause
    void onResume(boolean) -> onResume
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    void onMessage(java.lang.String,java.lang.Object) -> onMessage
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onOverrideUrlLoading(java.lang.String) -> onOverrideUrlLoading
com.phonegap.api.LOG -> com.phonegap.api.LOG:
    int VERBOSE -> VERBOSE
    int DEBUG -> DEBUG
    int INFO -> INFO
    int WARN -> WARN
    int ERROR -> ERROR
    int LOGLEVEL -> LOGLEVEL
    void setLogLevel(int) -> setLogLevel
    void setLogLevel(java.lang.String) -> setLogLevel
    boolean isLoggable(int) -> isLoggable
    void v(java.lang.String,java.lang.String) -> v
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void v(java.lang.String,java.lang.String,java.lang.Object[]) -> v
    void d(java.lang.String,java.lang.String,java.lang.Object[]) -> d
    void i(java.lang.String,java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.String,java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.String,java.lang.String,java.lang.Object[]) -> e
com.phonegap.api.PhonegapActivity -> com.phonegap.api.PhonegapActivity:
    void addService(java.lang.String,java.lang.String) -> addService
    void sendJavascript(java.lang.String) -> sendJavascript
    void startActivityForResult(com.phonegap.api.IPlugin,android.content.Intent,int) -> startActivityForResult
    void setActivityResultCallback(com.phonegap.api.IPlugin) -> setActivityResultCallback
    void loadUrl(java.lang.String) -> loadUrl
    void postMessage(java.lang.String,java.lang.Object) -> postMessage
com.phonegap.api.Plugin -> com.phonegap.api.Plugin:
    java.lang.String id -> id
    android.webkit.WebView webView -> webView
    com.phonegap.api.PhonegapActivity ctx -> ctx
    com.phonegap.api.PluginResult execute(java.lang.String,org.json.JSONArray,java.lang.String) -> execute
    boolean isSynch(java.lang.String) -> isSynch
    void setContext(com.phonegap.api.PhonegapActivity) -> setContext
    void setView(android.webkit.WebView) -> setView
    void onPause(boolean) -> onPause
    void onResume(boolean) -> onResume
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    void onMessage(java.lang.String,java.lang.Object) -> onMessage
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onOverrideUrlLoading(java.lang.String) -> onOverrideUrlLoading
    void sendJavascript(java.lang.String) -> sendJavascript
    void success(com.phonegap.api.PluginResult,java.lang.String) -> success
    void success(org.json.JSONObject,java.lang.String) -> success
    void success(java.lang.String,java.lang.String) -> success
    void error(com.phonegap.api.PluginResult,java.lang.String) -> error
    void error(org.json.JSONObject,java.lang.String) -> error
    void error(java.lang.String,java.lang.String) -> error
com.phonegap.api.PluginManager -> com.phonegap.api.PluginManager:
    java.util.HashMap plugins -> plugins
    java.util.HashMap services -> services
    com.phonegap.api.PhonegapActivity ctx -> ctx
    android.webkit.WebView app -> app
    java.util.HashMap urlMap -> urlMap
    void reinit() -> reinit
    void loadPlugins() -> loadPlugins
    java.lang.String exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> exec
    java.lang.Class getClassByName(java.lang.String) -> getClassByName
    boolean isPhoneGapPlugin(java.lang.Class) -> isPhoneGapPlugin
    com.phonegap.api.IPlugin addPlugin(java.lang.String,java.lang.String) -> addPlugin
    com.phonegap.api.IPlugin getPlugin(java.lang.String) -> getPlugin
    void addService(java.lang.String,java.lang.String) -> addService
    void onPause(boolean) -> onPause
    void onResume(boolean) -> onResume
    void onDestroy() -> onDestroy
    void postMessage(java.lang.String,java.lang.Object) -> postMessage
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean onOverrideUrlLoading(java.lang.String) -> onOverrideUrlLoading
    void pluginConfigurationMissing() -> pluginConfigurationMissing
com.phonegap.api.PluginManager$1 -> com.phonegap.api.a:
    com.phonegap.api.IPlugin val$plugin -> a
    java.lang.String val$action -> b
    org.json.JSONArray val$args -> c
    java.lang.String val$callbackId -> d
    com.phonegap.api.PhonegapActivity val$ctx -> e
    com.phonegap.api.PluginManager this$0 -> f
    void run() -> run
com.phonegap.api.PluginResult -> com.phonegap.api.PluginResult:
    int status -> status
    java.lang.String message -> message
    boolean keepCallback -> keepCallback
    java.lang.String cast -> cast
    java.lang.String[] StatusMessages -> StatusMessages
    void setKeepCallback(boolean) -> setKeepCallback
    int getStatus() -> getStatus
    java.lang.String getMessage() -> getMessage
    boolean getKeepCallback() -> getKeepCallback
    java.lang.String getJSONString() -> getJSONString
    java.lang.String toSuccessCallbackString(java.lang.String) -> toSuccessCallbackString
    java.lang.String toErrorCallbackString(java.lang.String) -> toErrorCallbackString
com.phonegap.api.PluginResult$Status -> com.phonegap.api.PluginResult$Status:
    com.phonegap.api.PluginResult$Status NO_RESULT -> NO_RESULT
    com.phonegap.api.PluginResult$Status OK -> OK
    com.phonegap.api.PluginResult$Status CLASS_NOT_FOUND_EXCEPTION -> CLASS_NOT_FOUND_EXCEPTION
    com.phonegap.api.PluginResult$Status ILLEGAL_ACCESS_EXCEPTION -> ILLEGAL_ACCESS_EXCEPTION
    com.phonegap.api.PluginResult$Status INSTANTIATION_EXCEPTION -> INSTANTIATION_EXCEPTION
    com.phonegap.api.PluginResult$Status MALFORMED_URL_EXCEPTION -> MALFORMED_URL_EXCEPTION
    com.phonegap.api.PluginResult$Status IO_EXCEPTION -> IO_EXCEPTION
    com.phonegap.api.PluginResult$Status INVALID_ACTION -> INVALID_ACTION
    com.phonegap.api.PluginResult$Status JSON_EXCEPTION -> JSON_EXCEPTION
    com.phonegap.api.PluginResult$Status ERROR -> ERROR
    com.phonegap.api.PluginResult$Status[] $VALUES -> $VALUES
    com.phonegap.api.PluginResult$Status[] values() -> values
    com.phonegap.api.PluginResult$Status valueOf(java.lang.String) -> valueOf
com.phonegap.file.EncodingException -> com.phonegap.file.EncodingException:
com.phonegap.file.FileExistsException -> com.phonegap.file.FileExistsException:
com.phonegap.file.InvalidModificationException -> com.phonegap.file.InvalidModificationException:
com.phonegap.file.NoModificationAllowedException -> com.phonegap.file.NoModificationAllowedException:
com.phonegap.file.TypeMismatchException -> com.phonegap.file.TypeMismatchException:
